// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isula/isula_image.proto

package isula

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Protocol int32

const (
	Protocol_TCP Protocol = 0
	Protocol_UDP Protocol = 1
)

var Protocol_name = map[int32]string{
	0: "TCP",
	1: "UDP",
}
var Protocol_value = map[string]int32{
	"TCP": 0,
	"UDP": 1,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{0}
}

type MountPropagation int32

const (
	// No mount propagation ("private" in Linux terminology).
	MountPropagation_PROPAGATION_PRIVATE MountPropagation = 0
	// Mounts get propagated from the host to the container ("rslave" in Linux).
	MountPropagation_PROPAGATION_HOST_TO_CONTAINER MountPropagation = 1
	// Mounts get propagated from the host to the container and from the
	// container to the host ("rshared" in Linux).
	MountPropagation_PROPAGATION_BIDIRECTIONAL MountPropagation = 2
)

var MountPropagation_name = map[int32]string{
	0: "PROPAGATION_PRIVATE",
	1: "PROPAGATION_HOST_TO_CONTAINER",
	2: "PROPAGATION_BIDIRECTIONAL",
}
var MountPropagation_value = map[string]int32{
	"PROPAGATION_PRIVATE":           0,
	"PROPAGATION_HOST_TO_CONTAINER": 1,
	"PROPAGATION_BIDIRECTIONAL":     2,
}

func (x MountPropagation) String() string {
	return proto.EnumName(MountPropagation_name, int32(x))
}
func (MountPropagation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{1}
}

type HealthCheckRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckRequest) Reset()         { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()    {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{0}
}
func (m *HealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequest.Unmarshal(m, b)
}
func (m *HealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequest.Marshal(b, m, deterministic)
}
func (dst *HealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequest.Merge(dst, src)
}
func (m *HealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequest.Size(m)
}
func (m *HealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequest proto.InternalMessageInfo

type HealthCheckResponse struct {
	Errmsg               string   `protobuf:"bytes,1,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,2,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckResponse) Reset()         { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()    {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{1}
}
func (m *HealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckResponse.Unmarshal(m, b)
}
func (m *HealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckResponse.Marshal(b, m, deterministic)
}
func (dst *HealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckResponse.Merge(dst, src)
}
func (m *HealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckResponse.Size(m)
}
func (m *HealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckResponse proto.InternalMessageInfo

func (m *HealthCheckResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *HealthCheckResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type LoginRequest struct {
	Server               string   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{2}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	Errmsg               string   `protobuf:"bytes,1,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,2,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{3}
}
func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (dst *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(dst, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *LoginResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type LogoutRequest struct {
	Server               string   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{4}
}
func (m *LogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRequest.Unmarshal(m, b)
}
func (m *LogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRequest.Marshal(b, m, deterministic)
}
func (dst *LogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRequest.Merge(dst, src)
}
func (m *LogoutRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutRequest.Size(m)
}
func (m *LogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRequest proto.InternalMessageInfo

func (m *LogoutRequest) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

type LogoutResponse struct {
	Errmsg               string   `protobuf:"bytes,1,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,2,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutResponse) Reset()         { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()    {}
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{5}
}
func (m *LogoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutResponse.Unmarshal(m, b)
}
func (m *LogoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutResponse.Marshal(b, m, deterministic)
}
func (dst *LogoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutResponse.Merge(dst, src)
}
func (m *LogoutResponse) XXX_Size() int {
	return xxx_messageInfo_LogoutResponse.Size(m)
}
func (m *LogoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutResponse proto.InternalMessageInfo

func (m *LogoutResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *LogoutResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type ContainerExportRequest struct {
	NameId               string   `protobuf:"bytes,1,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"`
	Output               string   `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	Uid                  uint32   `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  uint32   `protobuf:"varint,4,opt,name=gid,proto3" json:"gid,omitempty"`
	Offset               uint32   `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerExportRequest) Reset()         { *m = ContainerExportRequest{} }
func (m *ContainerExportRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerExportRequest) ProtoMessage()    {}
func (*ContainerExportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{6}
}
func (m *ContainerExportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerExportRequest.Unmarshal(m, b)
}
func (m *ContainerExportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerExportRequest.Marshal(b, m, deterministic)
}
func (dst *ContainerExportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerExportRequest.Merge(dst, src)
}
func (m *ContainerExportRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerExportRequest.Size(m)
}
func (m *ContainerExportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerExportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerExportRequest proto.InternalMessageInfo

func (m *ContainerExportRequest) GetNameId() string {
	if m != nil {
		return m.NameId
	}
	return ""
}

func (m *ContainerExportRequest) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *ContainerExportRequest) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ContainerExportRequest) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *ContainerExportRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ContainerExportResponse struct {
	Errmsg               string   `protobuf:"bytes,1,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,2,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerExportResponse) Reset()         { *m = ContainerExportResponse{} }
func (m *ContainerExportResponse) String() string { return proto.CompactTextString(m) }
func (*ContainerExportResponse) ProtoMessage()    {}
func (*ContainerExportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{7}
}
func (m *ContainerExportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerExportResponse.Unmarshal(m, b)
}
func (m *ContainerExportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerExportResponse.Marshal(b, m, deterministic)
}
func (dst *ContainerExportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerExportResponse.Merge(dst, src)
}
func (m *ContainerExportResponse) XXX_Size() int {
	return xxx_messageInfo_ContainerExportResponse.Size(m)
}
func (m *ContainerExportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerExportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerExportResponse proto.InternalMessageInfo

func (m *ContainerExportResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ContainerExportResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type LoadImageRequest struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadImageRequest) Reset()         { *m = LoadImageRequest{} }
func (m *LoadImageRequest) String() string { return proto.CompactTextString(m) }
func (*LoadImageRequest) ProtoMessage()    {}
func (*LoadImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{8}
}
func (m *LoadImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadImageRequest.Unmarshal(m, b)
}
func (m *LoadImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadImageRequest.Marshal(b, m, deterministic)
}
func (dst *LoadImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadImageRequest.Merge(dst, src)
}
func (m *LoadImageRequest) XXX_Size() int {
	return xxx_messageInfo_LoadImageRequest.Size(m)
}
func (m *LoadImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadImageRequest proto.InternalMessageInfo

func (m *LoadImageRequest) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *LoadImageRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type LoadImageResponose struct {
	Outmsg               string   `protobuf:"bytes,1,opt,name=outmsg,proto3" json:"outmsg,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,3,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadImageResponose) Reset()         { *m = LoadImageResponose{} }
func (m *LoadImageResponose) String() string { return proto.CompactTextString(m) }
func (*LoadImageResponose) ProtoMessage()    {}
func (*LoadImageResponose) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{9}
}
func (m *LoadImageResponose) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadImageResponose.Unmarshal(m, b)
}
func (m *LoadImageResponose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadImageResponose.Marshal(b, m, deterministic)
}
func (dst *LoadImageResponose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadImageResponose.Merge(dst, src)
}
func (m *LoadImageResponose) XXX_Size() int {
	return xxx_messageInfo_LoadImageResponose.Size(m)
}
func (m *LoadImageResponose) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadImageResponose.DiscardUnknown(m)
}

var xxx_messageInfo_LoadImageResponose proto.InternalMessageInfo

func (m *LoadImageResponose) GetOutmsg() string {
	if m != nil {
		return m.Outmsg
	}
	return ""
}

func (m *LoadImageResponose) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *LoadImageResponose) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type ImportRequest struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportRequest) Reset()         { *m = ImportRequest{} }
func (m *ImportRequest) String() string { return proto.CompactTextString(m) }
func (*ImportRequest) ProtoMessage()    {}
func (*ImportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{10}
}
func (m *ImportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportRequest.Unmarshal(m, b)
}
func (m *ImportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportRequest.Marshal(b, m, deterministic)
}
func (dst *ImportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportRequest.Merge(dst, src)
}
func (m *ImportRequest) XXX_Size() int {
	return xxx_messageInfo_ImportRequest.Size(m)
}
func (m *ImportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportRequest proto.InternalMessageInfo

func (m *ImportRequest) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *ImportRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type ImportResponose struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,3,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportResponose) Reset()         { *m = ImportResponose{} }
func (m *ImportResponose) String() string { return proto.CompactTextString(m) }
func (*ImportResponose) ProtoMessage()    {}
func (*ImportResponose) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{11}
}
func (m *ImportResponose) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportResponose.Unmarshal(m, b)
}
func (m *ImportResponose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportResponose.Marshal(b, m, deterministic)
}
func (dst *ImportResponose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportResponose.Merge(dst, src)
}
func (m *ImportResponose) XXX_Size() int {
	return xxx_messageInfo_ImportResponose.Size(m)
}
func (m *ImportResponose) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportResponose.DiscardUnknown(m)
}

var xxx_messageInfo_ImportResponose proto.InternalMessageInfo

func (m *ImportResponose) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ImportResponose) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ImportResponose) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type GraphdriverStatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphdriverStatusRequest) Reset()         { *m = GraphdriverStatusRequest{} }
func (m *GraphdriverStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GraphdriverStatusRequest) ProtoMessage()    {}
func (*GraphdriverStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{12}
}
func (m *GraphdriverStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphdriverStatusRequest.Unmarshal(m, b)
}
func (m *GraphdriverStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphdriverStatusRequest.Marshal(b, m, deterministic)
}
func (dst *GraphdriverStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphdriverStatusRequest.Merge(dst, src)
}
func (m *GraphdriverStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GraphdriverStatusRequest.Size(m)
}
func (m *GraphdriverStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphdriverStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GraphdriverStatusRequest proto.InternalMessageInfo

type GraphdriverStatusResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,3,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphdriverStatusResponse) Reset()         { *m = GraphdriverStatusResponse{} }
func (m *GraphdriverStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GraphdriverStatusResponse) ProtoMessage()    {}
func (*GraphdriverStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{13}
}
func (m *GraphdriverStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphdriverStatusResponse.Unmarshal(m, b)
}
func (m *GraphdriverStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphdriverStatusResponse.Marshal(b, m, deterministic)
}
func (dst *GraphdriverStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphdriverStatusResponse.Merge(dst, src)
}
func (m *GraphdriverStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GraphdriverStatusResponse.Size(m)
}
func (m *GraphdriverStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphdriverStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GraphdriverStatusResponse proto.InternalMessageInfo

func (m *GraphdriverStatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GraphdriverStatusResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *GraphdriverStatusResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type GraphdriverMetadataRequest struct {
	NameId               string   `protobuf:"bytes,1,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphdriverMetadataRequest) Reset()         { *m = GraphdriverMetadataRequest{} }
func (m *GraphdriverMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*GraphdriverMetadataRequest) ProtoMessage()    {}
func (*GraphdriverMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{14}
}
func (m *GraphdriverMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphdriverMetadataRequest.Unmarshal(m, b)
}
func (m *GraphdriverMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphdriverMetadataRequest.Marshal(b, m, deterministic)
}
func (dst *GraphdriverMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphdriverMetadataRequest.Merge(dst, src)
}
func (m *GraphdriverMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_GraphdriverMetadataRequest.Size(m)
}
func (m *GraphdriverMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphdriverMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GraphdriverMetadataRequest proto.InternalMessageInfo

func (m *GraphdriverMetadataRequest) GetNameId() string {
	if m != nil {
		return m.NameId
	}
	return ""
}

type GraphdriverMetadataResponse struct {
	Metadata             map[string]string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Errmsg               string            `protobuf:"bytes,3,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32            `protobuf:"varint,4,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GraphdriverMetadataResponse) Reset()         { *m = GraphdriverMetadataResponse{} }
func (m *GraphdriverMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*GraphdriverMetadataResponse) ProtoMessage()    {}
func (*GraphdriverMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{15}
}
func (m *GraphdriverMetadataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphdriverMetadataResponse.Unmarshal(m, b)
}
func (m *GraphdriverMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphdriverMetadataResponse.Marshal(b, m, deterministic)
}
func (dst *GraphdriverMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphdriverMetadataResponse.Merge(dst, src)
}
func (m *GraphdriverMetadataResponse) XXX_Size() int {
	return xxx_messageInfo_GraphdriverMetadataResponse.Size(m)
}
func (m *GraphdriverMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphdriverMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GraphdriverMetadataResponse proto.InternalMessageInfo

func (m *GraphdriverMetadataResponse) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *GraphdriverMetadataResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GraphdriverMetadataResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *GraphdriverMetadataResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type ContainerFsUsageRequest struct {
	NameId               string   `protobuf:"bytes,1,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerFsUsageRequest) Reset()         { *m = ContainerFsUsageRequest{} }
func (m *ContainerFsUsageRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerFsUsageRequest) ProtoMessage()    {}
func (*ContainerFsUsageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{16}
}
func (m *ContainerFsUsageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerFsUsageRequest.Unmarshal(m, b)
}
func (m *ContainerFsUsageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerFsUsageRequest.Marshal(b, m, deterministic)
}
func (dst *ContainerFsUsageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerFsUsageRequest.Merge(dst, src)
}
func (m *ContainerFsUsageRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerFsUsageRequest.Size(m)
}
func (m *ContainerFsUsageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerFsUsageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerFsUsageRequest proto.InternalMessageInfo

func (m *ContainerFsUsageRequest) GetNameId() string {
	if m != nil {
		return m.NameId
	}
	return ""
}

type ContainerFsUsageResponse struct {
	Usage                string   `protobuf:"bytes,1,opt,name=usage,proto3" json:"usage,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,3,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerFsUsageResponse) Reset()         { *m = ContainerFsUsageResponse{} }
func (m *ContainerFsUsageResponse) String() string { return proto.CompactTextString(m) }
func (*ContainerFsUsageResponse) ProtoMessage()    {}
func (*ContainerFsUsageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{17}
}
func (m *ContainerFsUsageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerFsUsageResponse.Unmarshal(m, b)
}
func (m *ContainerFsUsageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerFsUsageResponse.Marshal(b, m, deterministic)
}
func (dst *ContainerFsUsageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerFsUsageResponse.Merge(dst, src)
}
func (m *ContainerFsUsageResponse) XXX_Size() int {
	return xxx_messageInfo_ContainerFsUsageResponse.Size(m)
}
func (m *ContainerFsUsageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerFsUsageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerFsUsageResponse proto.InternalMessageInfo

func (m *ContainerFsUsageResponse) GetUsage() string {
	if m != nil {
		return m.Usage
	}
	return ""
}

func (m *ContainerFsUsageResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ContainerFsUsageResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type ContainerUmountRequest struct {
	NameId               string   `protobuf:"bytes,1,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"`
	Force                bool     `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerUmountRequest) Reset()         { *m = ContainerUmountRequest{} }
func (m *ContainerUmountRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerUmountRequest) ProtoMessage()    {}
func (*ContainerUmountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{18}
}
func (m *ContainerUmountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerUmountRequest.Unmarshal(m, b)
}
func (m *ContainerUmountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerUmountRequest.Marshal(b, m, deterministic)
}
func (dst *ContainerUmountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerUmountRequest.Merge(dst, src)
}
func (m *ContainerUmountRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerUmountRequest.Size(m)
}
func (m *ContainerUmountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerUmountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerUmountRequest proto.InternalMessageInfo

func (m *ContainerUmountRequest) GetNameId() string {
	if m != nil {
		return m.NameId
	}
	return ""
}

func (m *ContainerUmountRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type ContainerUmountResponse struct {
	Errmsg               string   `protobuf:"bytes,1,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,2,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerUmountResponse) Reset()         { *m = ContainerUmountResponse{} }
func (m *ContainerUmountResponse) String() string { return proto.CompactTextString(m) }
func (*ContainerUmountResponse) ProtoMessage()    {}
func (*ContainerUmountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{19}
}
func (m *ContainerUmountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerUmountResponse.Unmarshal(m, b)
}
func (m *ContainerUmountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerUmountResponse.Marshal(b, m, deterministic)
}
func (dst *ContainerUmountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerUmountResponse.Merge(dst, src)
}
func (m *ContainerUmountResponse) XXX_Size() int {
	return xxx_messageInfo_ContainerUmountResponse.Size(m)
}
func (m *ContainerUmountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerUmountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerUmountResponse proto.InternalMessageInfo

func (m *ContainerUmountResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ContainerUmountResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type ContainerMountRequest struct {
	NameId               string   `protobuf:"bytes,1,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerMountRequest) Reset()         { *m = ContainerMountRequest{} }
func (m *ContainerMountRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerMountRequest) ProtoMessage()    {}
func (*ContainerMountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{20}
}
func (m *ContainerMountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerMountRequest.Unmarshal(m, b)
}
func (m *ContainerMountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerMountRequest.Marshal(b, m, deterministic)
}
func (dst *ContainerMountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerMountRequest.Merge(dst, src)
}
func (m *ContainerMountRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerMountRequest.Size(m)
}
func (m *ContainerMountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerMountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerMountRequest proto.InternalMessageInfo

func (m *ContainerMountRequest) GetNameId() string {
	if m != nil {
		return m.NameId
	}
	return ""
}

type ContainerMountResponse struct {
	Errmsg               string   `protobuf:"bytes,1,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,2,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerMountResponse) Reset()         { *m = ContainerMountResponse{} }
func (m *ContainerMountResponse) String() string { return proto.CompactTextString(m) }
func (*ContainerMountResponse) ProtoMessage()    {}
func (*ContainerMountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{21}
}
func (m *ContainerMountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerMountResponse.Unmarshal(m, b)
}
func (m *ContainerMountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerMountResponse.Marshal(b, m, deterministic)
}
func (dst *ContainerMountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerMountResponse.Merge(dst, src)
}
func (m *ContainerMountResponse) XXX_Size() int {
	return xxx_messageInfo_ContainerMountResponse.Size(m)
}
func (m *ContainerMountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerMountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerMountResponse proto.InternalMessageInfo

func (m *ContainerMountResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ContainerMountResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type ContainerRemoveRequest struct {
	NameId               string   `protobuf:"bytes,1,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerRemoveRequest) Reset()         { *m = ContainerRemoveRequest{} }
func (m *ContainerRemoveRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerRemoveRequest) ProtoMessage()    {}
func (*ContainerRemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{22}
}
func (m *ContainerRemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerRemoveRequest.Unmarshal(m, b)
}
func (m *ContainerRemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerRemoveRequest.Marshal(b, m, deterministic)
}
func (dst *ContainerRemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerRemoveRequest.Merge(dst, src)
}
func (m *ContainerRemoveRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerRemoveRequest.Size(m)
}
func (m *ContainerRemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerRemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerRemoveRequest proto.InternalMessageInfo

func (m *ContainerRemoveRequest) GetNameId() string {
	if m != nil {
		return m.NameId
	}
	return ""
}

type ContainerRemoveResponse struct {
	Errmsg               string   `protobuf:"bytes,1,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,2,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerRemoveResponse) Reset()         { *m = ContainerRemoveResponse{} }
func (m *ContainerRemoveResponse) String() string { return proto.CompactTextString(m) }
func (*ContainerRemoveResponse) ProtoMessage()    {}
func (*ContainerRemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{23}
}
func (m *ContainerRemoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerRemoveResponse.Unmarshal(m, b)
}
func (m *ContainerRemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerRemoveResponse.Marshal(b, m, deterministic)
}
func (dst *ContainerRemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerRemoveResponse.Merge(dst, src)
}
func (m *ContainerRemoveResponse) XXX_Size() int {
	return xxx_messageInfo_ContainerRemoveResponse.Size(m)
}
func (m *ContainerRemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerRemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerRemoveResponse proto.InternalMessageInfo

func (m *ContainerRemoveResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ContainerRemoveResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type ContainerPrepareRequest struct {
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	StorageOpts          []string `protobuf:"bytes,4,rep,name=storage_opts,json=storageOpts,proto3" json:"storage_opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerPrepareRequest) Reset()         { *m = ContainerPrepareRequest{} }
func (m *ContainerPrepareRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerPrepareRequest) ProtoMessage()    {}
func (*ContainerPrepareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{24}
}
func (m *ContainerPrepareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerPrepareRequest.Unmarshal(m, b)
}
func (m *ContainerPrepareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerPrepareRequest.Marshal(b, m, deterministic)
}
func (dst *ContainerPrepareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerPrepareRequest.Merge(dst, src)
}
func (m *ContainerPrepareRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerPrepareRequest.Size(m)
}
func (m *ContainerPrepareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerPrepareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerPrepareRequest proto.InternalMessageInfo

func (m *ContainerPrepareRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ContainerPrepareRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContainerPrepareRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContainerPrepareRequest) GetStorageOpts() []string {
	if m != nil {
		return m.StorageOpts
	}
	return nil
}

type ContainerPrepareResponse struct {
	MountPoint           string   `protobuf:"bytes,1,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
	ImageConf            string   `protobuf:"bytes,2,opt,name=image_conf,json=imageConf,proto3" json:"image_conf,omitempty"`
	Errmsg               string   `protobuf:"bytes,3,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,4,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerPrepareResponse) Reset()         { *m = ContainerPrepareResponse{} }
func (m *ContainerPrepareResponse) String() string { return proto.CompactTextString(m) }
func (*ContainerPrepareResponse) ProtoMessage()    {}
func (*ContainerPrepareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{25}
}
func (m *ContainerPrepareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerPrepareResponse.Unmarshal(m, b)
}
func (m *ContainerPrepareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerPrepareResponse.Marshal(b, m, deterministic)
}
func (dst *ContainerPrepareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerPrepareResponse.Merge(dst, src)
}
func (m *ContainerPrepareResponse) XXX_Size() int {
	return xxx_messageInfo_ContainerPrepareResponse.Size(m)
}
func (m *ContainerPrepareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerPrepareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerPrepareResponse proto.InternalMessageInfo

func (m *ContainerPrepareResponse) GetMountPoint() string {
	if m != nil {
		return m.MountPoint
	}
	return ""
}

func (m *ContainerPrepareResponse) GetImageConf() string {
	if m != nil {
		return m.ImageConf
	}
	return ""
}

func (m *ContainerPrepareResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ContainerPrepareResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type ListContainersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListContainersRequest) Reset()         { *m = ListContainersRequest{} }
func (m *ListContainersRequest) String() string { return proto.CompactTextString(m) }
func (*ListContainersRequest) ProtoMessage()    {}
func (*ListContainersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{26}
}
func (m *ListContainersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContainersRequest.Unmarshal(m, b)
}
func (m *ListContainersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContainersRequest.Marshal(b, m, deterministic)
}
func (dst *ListContainersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContainersRequest.Merge(dst, src)
}
func (m *ListContainersRequest) XXX_Size() int {
	return xxx_messageInfo_ListContainersRequest.Size(m)
}
func (m *ListContainersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContainersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListContainersRequest proto.InternalMessageInfo

type ListContainersResponse struct {
	Containers           map[string]bool `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Errmsg               string          `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32          `protobuf:"varint,3,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListContainersResponse) Reset()         { *m = ListContainersResponse{} }
func (m *ListContainersResponse) String() string { return proto.CompactTextString(m) }
func (*ListContainersResponse) ProtoMessage()    {}
func (*ListContainersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{27}
}
func (m *ListContainersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContainersResponse.Unmarshal(m, b)
}
func (m *ListContainersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContainersResponse.Marshal(b, m, deterministic)
}
func (dst *ListContainersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContainersResponse.Merge(dst, src)
}
func (m *ListContainersResponse) XXX_Size() int {
	return xxx_messageInfo_ListContainersResponse.Size(m)
}
func (m *ListContainersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContainersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListContainersResponse proto.InternalMessageInfo

func (m *ListContainersResponse) GetContainers() map[string]bool {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *ListContainersResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ListContainersResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

// DNSConfig specifies the DNS servers and search domains of a sandbox.
type DNSConfig struct {
	// List of DNS servers of the cluster.
	Servers []string `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	// List of DNS search domains of the cluster.
	Searches []string `protobuf:"bytes,2,rep,name=searches,proto3" json:"searches,omitempty"`
	// List of DNS options. See https://linux.die.net/man/5/resolv.conf
	// for all available options.
	Options              []string `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNSConfig) Reset()         { *m = DNSConfig{} }
func (m *DNSConfig) String() string { return proto.CompactTextString(m) }
func (*DNSConfig) ProtoMessage()    {}
func (*DNSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{28}
}
func (m *DNSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNSConfig.Unmarshal(m, b)
}
func (m *DNSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNSConfig.Marshal(b, m, deterministic)
}
func (dst *DNSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSConfig.Merge(dst, src)
}
func (m *DNSConfig) XXX_Size() int {
	return xxx_messageInfo_DNSConfig.Size(m)
}
func (m *DNSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DNSConfig proto.InternalMessageInfo

func (m *DNSConfig) GetServers() []string {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *DNSConfig) GetSearches() []string {
	if m != nil {
		return m.Searches
	}
	return nil
}

func (m *DNSConfig) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

// PortMapping specifies the port mapping configurations of a sandbox.
type PortMapping struct {
	// Protocol of the port mapping.
	Protocol Protocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=isula.Protocol" json:"protocol,omitempty"`
	// Port number within the container. Default: 0 (not specified).
	ContainerPort int32 `protobuf:"varint,2,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"`
	// Port number on the host. Default: 0 (not specified).
	HostPort int32 `protobuf:"varint,3,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`
	// Host IP.
	HostIp               string   `protobuf:"bytes,4,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortMapping) Reset()         { *m = PortMapping{} }
func (m *PortMapping) String() string { return proto.CompactTextString(m) }
func (*PortMapping) ProtoMessage()    {}
func (*PortMapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{29}
}
func (m *PortMapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortMapping.Unmarshal(m, b)
}
func (m *PortMapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortMapping.Marshal(b, m, deterministic)
}
func (dst *PortMapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortMapping.Merge(dst, src)
}
func (m *PortMapping) XXX_Size() int {
	return xxx_messageInfo_PortMapping.Size(m)
}
func (m *PortMapping) XXX_DiscardUnknown() {
	xxx_messageInfo_PortMapping.DiscardUnknown(m)
}

var xxx_messageInfo_PortMapping proto.InternalMessageInfo

func (m *PortMapping) GetProtocol() Protocol {
	if m != nil {
		return m.Protocol
	}
	return Protocol_TCP
}

func (m *PortMapping) GetContainerPort() int32 {
	if m != nil {
		return m.ContainerPort
	}
	return 0
}

func (m *PortMapping) GetHostPort() int32 {
	if m != nil {
		return m.HostPort
	}
	return 0
}

func (m *PortMapping) GetHostIp() string {
	if m != nil {
		return m.HostIp
	}
	return ""
}

// Mount specifies a host volume to mount into a container.
type Mount struct {
	// Path of the mount within the container.
	ContainerPath string `protobuf:"bytes,1,opt,name=container_path,json=containerPath,proto3" json:"container_path,omitempty"`
	// Path of the mount on the host.
	HostPath string `protobuf:"bytes,2,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	// If set, the mount is read-only.
	Readonly bool `protobuf:"varint,3,opt,name=readonly,proto3" json:"readonly,omitempty"`
	// If set, the mount needs SELinux relabeling.
	SelinuxRelabel bool `protobuf:"varint,4,opt,name=selinux_relabel,json=selinuxRelabel,proto3" json:"selinux_relabel,omitempty"`
	// Requested propagation mode.
	Propagation          MountPropagation `protobuf:"varint,5,opt,name=propagation,proto3,enum=isula.MountPropagation" json:"propagation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Mount) Reset()         { *m = Mount{} }
func (m *Mount) String() string { return proto.CompactTextString(m) }
func (*Mount) ProtoMessage()    {}
func (*Mount) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{30}
}
func (m *Mount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mount.Unmarshal(m, b)
}
func (m *Mount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mount.Marshal(b, m, deterministic)
}
func (dst *Mount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mount.Merge(dst, src)
}
func (m *Mount) XXX_Size() int {
	return xxx_messageInfo_Mount.Size(m)
}
func (m *Mount) XXX_DiscardUnknown() {
	xxx_messageInfo_Mount.DiscardUnknown(m)
}

var xxx_messageInfo_Mount proto.InternalMessageInfo

func (m *Mount) GetContainerPath() string {
	if m != nil {
		return m.ContainerPath
	}
	return ""
}

func (m *Mount) GetHostPath() string {
	if m != nil {
		return m.HostPath
	}
	return ""
}

func (m *Mount) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

func (m *Mount) GetSelinuxRelabel() bool {
	if m != nil {
		return m.SelinuxRelabel
	}
	return false
}

func (m *Mount) GetPropagation() MountPropagation {
	if m != nil {
		return m.Propagation
	}
	return MountPropagation_PROPAGATION_PRIVATE
}

// NamespaceOption provides options for Linux namespaces.
type NamespaceOption struct {
	// If set, use the host's network namespace.
	HostNetwork bool `protobuf:"varint,1,opt,name=host_network,json=hostNetwork,proto3" json:"host_network,omitempty"`
	// If set, use the host's PID namespace.
	HostPid bool `protobuf:"varint,2,opt,name=host_pid,json=hostPid,proto3" json:"host_pid,omitempty"`
	// If set, use the host's IPC namespace.
	HostIpc              bool     `protobuf:"varint,3,opt,name=host_ipc,json=hostIpc,proto3" json:"host_ipc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamespaceOption) Reset()         { *m = NamespaceOption{} }
func (m *NamespaceOption) String() string { return proto.CompactTextString(m) }
func (*NamespaceOption) ProtoMessage()    {}
func (*NamespaceOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{31}
}
func (m *NamespaceOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceOption.Unmarshal(m, b)
}
func (m *NamespaceOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceOption.Marshal(b, m, deterministic)
}
func (dst *NamespaceOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceOption.Merge(dst, src)
}
func (m *NamespaceOption) XXX_Size() int {
	return xxx_messageInfo_NamespaceOption.Size(m)
}
func (m *NamespaceOption) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceOption.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceOption proto.InternalMessageInfo

func (m *NamespaceOption) GetHostNetwork() bool {
	if m != nil {
		return m.HostNetwork
	}
	return false
}

func (m *NamespaceOption) GetHostPid() bool {
	if m != nil {
		return m.HostPid
	}
	return false
}

func (m *NamespaceOption) GetHostIpc() bool {
	if m != nil {
		return m.HostIpc
	}
	return false
}

// Int64Value is the wrapper of int64.
type Int64Value struct {
	// The value.
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Int64Value) Reset()         { *m = Int64Value{} }
func (m *Int64Value) String() string { return proto.CompactTextString(m) }
func (*Int64Value) ProtoMessage()    {}
func (*Int64Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{32}
}
func (m *Int64Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Int64Value.Unmarshal(m, b)
}
func (m *Int64Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Int64Value.Marshal(b, m, deterministic)
}
func (dst *Int64Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Int64Value.Merge(dst, src)
}
func (m *Int64Value) XXX_Size() int {
	return xxx_messageInfo_Int64Value.Size(m)
}
func (m *Int64Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Int64Value.DiscardUnknown(m)
}

var xxx_messageInfo_Int64Value proto.InternalMessageInfo

func (m *Int64Value) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// SELinuxOption are the labels to be applied to the container.
type SELinuxOption struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Role                 string   `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Level                string   `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SELinuxOption) Reset()         { *m = SELinuxOption{} }
func (m *SELinuxOption) String() string { return proto.CompactTextString(m) }
func (*SELinuxOption) ProtoMessage()    {}
func (*SELinuxOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{33}
}
func (m *SELinuxOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SELinuxOption.Unmarshal(m, b)
}
func (m *SELinuxOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SELinuxOption.Marshal(b, m, deterministic)
}
func (dst *SELinuxOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SELinuxOption.Merge(dst, src)
}
func (m *SELinuxOption) XXX_Size() int {
	return xxx_messageInfo_SELinuxOption.Size(m)
}
func (m *SELinuxOption) XXX_DiscardUnknown() {
	xxx_messageInfo_SELinuxOption.DiscardUnknown(m)
}

var xxx_messageInfo_SELinuxOption proto.InternalMessageInfo

func (m *SELinuxOption) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *SELinuxOption) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *SELinuxOption) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SELinuxOption) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

// LinuxSandboxSecurityContext holds linux security configuration that will be
// applied to a sandbox. Note that:
// 1) It does not apply to containers in the pods.
// 2) It may not be applicable to a PodSandbox which does not contain any running
//    process.
type LinuxSandboxSecurityContext struct {
	// Configurations for the sandbox's namespaces.
	// This will be used only if the PodSandbox uses namespace for isolation.
	NamespaceOptions *NamespaceOption `protobuf:"bytes,1,opt,name=namespace_options,json=namespaceOptions,proto3" json:"namespace_options,omitempty"`
	// Optional SELinux context to be applied.
	SelinuxOptions *SELinuxOption `protobuf:"bytes,2,opt,name=selinux_options,json=selinuxOptions,proto3" json:"selinux_options,omitempty"`
	// UID to run sandbox processes as, when applicable.
	RunAsUser *Int64Value `protobuf:"bytes,3,opt,name=run_as_user,json=runAsUser,proto3" json:"run_as_user,omitempty"`
	// If set, the root filesystem of the sandbox is read-only.
	ReadonlyRootfs bool `protobuf:"varint,4,opt,name=readonly_rootfs,json=readonlyRootfs,proto3" json:"readonly_rootfs,omitempty"`
	// List of groups applied to the first process run in the sandbox, in
	// addition to the sandbox's primary GID.
	SupplementalGroups []int64 `protobuf:"varint,5,rep,packed,name=supplemental_groups,json=supplementalGroups,proto3" json:"supplemental_groups,omitempty"`
	// Indicates whether the sandbox will be asked to run a privileged
	// container. If a privileged container is to be executed within it, this
	// MUST be true.
	// This allows a sandbox to take additional security precautions if no
	// privileged containers are expected to be run.
	Privileged bool `protobuf:"varint,6,opt,name=privileged,proto3" json:"privileged,omitempty"`
	// Seccomp profile for the sandbox, candidate values are:
	// * docker/default: the default profile for the docker container runtime
	// * unconfined: unconfined profile, ie, no seccomp sandboxing
	// * localhost/<full-path-to-profile>: the profile installed on the node.
	//   <full-path-to-profile> is the full path of the profile.
	// Default: "", which is identical with unconfined.
	SeccompProfilePath   string   `protobuf:"bytes,7,opt,name=seccomp_profile_path,json=seccompProfilePath,proto3" json:"seccomp_profile_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinuxSandboxSecurityContext) Reset()         { *m = LinuxSandboxSecurityContext{} }
func (m *LinuxSandboxSecurityContext) String() string { return proto.CompactTextString(m) }
func (*LinuxSandboxSecurityContext) ProtoMessage()    {}
func (*LinuxSandboxSecurityContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{34}
}
func (m *LinuxSandboxSecurityContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinuxSandboxSecurityContext.Unmarshal(m, b)
}
func (m *LinuxSandboxSecurityContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinuxSandboxSecurityContext.Marshal(b, m, deterministic)
}
func (dst *LinuxSandboxSecurityContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinuxSandboxSecurityContext.Merge(dst, src)
}
func (m *LinuxSandboxSecurityContext) XXX_Size() int {
	return xxx_messageInfo_LinuxSandboxSecurityContext.Size(m)
}
func (m *LinuxSandboxSecurityContext) XXX_DiscardUnknown() {
	xxx_messageInfo_LinuxSandboxSecurityContext.DiscardUnknown(m)
}

var xxx_messageInfo_LinuxSandboxSecurityContext proto.InternalMessageInfo

func (m *LinuxSandboxSecurityContext) GetNamespaceOptions() *NamespaceOption {
	if m != nil {
		return m.NamespaceOptions
	}
	return nil
}

func (m *LinuxSandboxSecurityContext) GetSelinuxOptions() *SELinuxOption {
	if m != nil {
		return m.SelinuxOptions
	}
	return nil
}

func (m *LinuxSandboxSecurityContext) GetRunAsUser() *Int64Value {
	if m != nil {
		return m.RunAsUser
	}
	return nil
}

func (m *LinuxSandboxSecurityContext) GetReadonlyRootfs() bool {
	if m != nil {
		return m.ReadonlyRootfs
	}
	return false
}

func (m *LinuxSandboxSecurityContext) GetSupplementalGroups() []int64 {
	if m != nil {
		return m.SupplementalGroups
	}
	return nil
}

func (m *LinuxSandboxSecurityContext) GetPrivileged() bool {
	if m != nil {
		return m.Privileged
	}
	return false
}

func (m *LinuxSandboxSecurityContext) GetSeccompProfilePath() string {
	if m != nil {
		return m.SeccompProfilePath
	}
	return ""
}

// LinuxPodSandboxConfig holds platform-specific configurations for Linux
// host platforms and Linux-based containers.
type LinuxPodSandboxConfig struct {
	// Parent cgroup of the PodSandbox.
	// The cgroupfs style syntax will be used, but the container runtime can
	// convert it to systemd semantics if needed.
	CgroupParent string `protobuf:"bytes,1,opt,name=cgroup_parent,json=cgroupParent,proto3" json:"cgroup_parent,omitempty"`
	// LinuxSandboxSecurityContext holds sandbox security attributes.
	SecurityContext *LinuxSandboxSecurityContext `protobuf:"bytes,2,opt,name=security_context,json=securityContext,proto3" json:"security_context,omitempty"`
	// Sysctls holds linux sysctls config for the sandbox.
	Sysctls              map[string]string `protobuf:"bytes,3,rep,name=sysctls,proto3" json:"sysctls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LinuxPodSandboxConfig) Reset()         { *m = LinuxPodSandboxConfig{} }
func (m *LinuxPodSandboxConfig) String() string { return proto.CompactTextString(m) }
func (*LinuxPodSandboxConfig) ProtoMessage()    {}
func (*LinuxPodSandboxConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{35}
}
func (m *LinuxPodSandboxConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinuxPodSandboxConfig.Unmarshal(m, b)
}
func (m *LinuxPodSandboxConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinuxPodSandboxConfig.Marshal(b, m, deterministic)
}
func (dst *LinuxPodSandboxConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinuxPodSandboxConfig.Merge(dst, src)
}
func (m *LinuxPodSandboxConfig) XXX_Size() int {
	return xxx_messageInfo_LinuxPodSandboxConfig.Size(m)
}
func (m *LinuxPodSandboxConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LinuxPodSandboxConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LinuxPodSandboxConfig proto.InternalMessageInfo

func (m *LinuxPodSandboxConfig) GetCgroupParent() string {
	if m != nil {
		return m.CgroupParent
	}
	return ""
}

func (m *LinuxPodSandboxConfig) GetSecurityContext() *LinuxSandboxSecurityContext {
	if m != nil {
		return m.SecurityContext
	}
	return nil
}

func (m *LinuxPodSandboxConfig) GetSysctls() map[string]string {
	if m != nil {
		return m.Sysctls
	}
	return nil
}

// PodSandboxMetadata holds all necessary information for building the sandbox name.
// The container runtime is encouraged to expose the metadata associated with the
// PodSandbox in its user interface for better user experience. For example,
// the runtime can construct a unique PodSandboxName based on the metadata.
type PodSandboxMetadata struct {
	// Pod name of the sandbox. Same as the pod name in the PodSpec.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Pod UID of the sandbox. Same as the pod UID in the PodSpec.
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// Pod namespace of the sandbox. Same as the pod namespace in the PodSpec.
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Attempt number of creating the sandbox. Default: 0.
	Attempt              uint32   `protobuf:"varint,4,opt,name=attempt,proto3" json:"attempt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodSandboxMetadata) Reset()         { *m = PodSandboxMetadata{} }
func (m *PodSandboxMetadata) String() string { return proto.CompactTextString(m) }
func (*PodSandboxMetadata) ProtoMessage()    {}
func (*PodSandboxMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{36}
}
func (m *PodSandboxMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSandboxMetadata.Unmarshal(m, b)
}
func (m *PodSandboxMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSandboxMetadata.Marshal(b, m, deterministic)
}
func (dst *PodSandboxMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSandboxMetadata.Merge(dst, src)
}
func (m *PodSandboxMetadata) XXX_Size() int {
	return xxx_messageInfo_PodSandboxMetadata.Size(m)
}
func (m *PodSandboxMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSandboxMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_PodSandboxMetadata proto.InternalMessageInfo

func (m *PodSandboxMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PodSandboxMetadata) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PodSandboxMetadata) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *PodSandboxMetadata) GetAttempt() uint32 {
	if m != nil {
		return m.Attempt
	}
	return 0
}

// PodSandboxConfig holds all the required and optional fields for creating a
// sandbox.
type PodSandboxConfig struct {
	// Metadata of the sandbox. This information will uniquely identify the
	// sandbox, and the runtime should leverage this to ensure correct
	// operation. The runtime may also use this information to improve UX, such
	// as by constructing a readable name.
	Metadata *PodSandboxMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Hostname of the sandbox.
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Path to the directory on the host in which container log files are
	// stored.
	// By default the log of a container going into the LogDirectory will be
	// hooked up to STDOUT and STDERR. However, the LogDirectory may contain
	// binary log files with structured logging data from the individual
	// containers. For example, the files might be newline separated JSON
	// structured logs, systemd-journald journal files, gRPC trace files, etc.
	// E.g.,
	//     PodSandboxConfig.LogDirectory = `/var/log/pods/<podUID>/`
	//     ContainerConfig.LogPath = `containerName_Instance#.log`
	//
	// WARNING: Log management and how kubelet should interface with the
	// container logs are under active discussion in
	// https://issues.k8s.io/24677. There *may* be future change of direction
	// for logging as the discussion carries on.
	LogDirectory string `protobuf:"bytes,3,opt,name=log_directory,json=logDirectory,proto3" json:"log_directory,omitempty"`
	// DNS config for the sandbox.
	DnsConfig *DNSConfig `protobuf:"bytes,4,opt,name=dns_config,json=dnsConfig,proto3" json:"dns_config,omitempty"`
	// Port mappings for the sandbox.
	PortMappings []*PortMapping `protobuf:"bytes,5,rep,name=port_mappings,json=portMappings,proto3" json:"port_mappings,omitempty"`
	// Key-value pairs that may be used to scope and select individual resources.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Unstructured key-value map that may be set by the kubelet to store and
	// retrieve arbitrary metadata. This will include any annotations set on a
	// pod through the Kubernetes API.
	//
	// Annotations MUST NOT be altered by the runtime; the annotations stored
	// here MUST be returned in the PodSandboxStatus associated with the pod
	// this PodSandboxConfig creates.
	//
	// In general, in order to preserve a well-defined interface between the
	// kubelet and the container runtime, annotations SHOULD NOT influence
	// runtime behaviour.
	//
	// Annotations can also be useful for runtime authors to experiment with
	// new features that are opaque to the Kubernetes APIs (both user-facing
	// and the CRI). Whenever possible, however, runtime authors SHOULD
	// consider proposing new typed fields for any new features instead.
	Annotations map[string]string `protobuf:"bytes,7,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional configurations specific to Linux hosts.
	Linux                *LinuxPodSandboxConfig `protobuf:"bytes,8,opt,name=linux,proto3" json:"linux,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PodSandboxConfig) Reset()         { *m = PodSandboxConfig{} }
func (m *PodSandboxConfig) String() string { return proto.CompactTextString(m) }
func (*PodSandboxConfig) ProtoMessage()    {}
func (*PodSandboxConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{37}
}
func (m *PodSandboxConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSandboxConfig.Unmarshal(m, b)
}
func (m *PodSandboxConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSandboxConfig.Marshal(b, m, deterministic)
}
func (dst *PodSandboxConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSandboxConfig.Merge(dst, src)
}
func (m *PodSandboxConfig) XXX_Size() int {
	return xxx_messageInfo_PodSandboxConfig.Size(m)
}
func (m *PodSandboxConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSandboxConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PodSandboxConfig proto.InternalMessageInfo

func (m *PodSandboxConfig) GetMetadata() *PodSandboxMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *PodSandboxConfig) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *PodSandboxConfig) GetLogDirectory() string {
	if m != nil {
		return m.LogDirectory
	}
	return ""
}

func (m *PodSandboxConfig) GetDnsConfig() *DNSConfig {
	if m != nil {
		return m.DnsConfig
	}
	return nil
}

func (m *PodSandboxConfig) GetPortMappings() []*PortMapping {
	if m != nil {
		return m.PortMappings
	}
	return nil
}

func (m *PodSandboxConfig) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *PodSandboxConfig) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *PodSandboxConfig) GetLinux() *LinuxPodSandboxConfig {
	if m != nil {
		return m.Linux
	}
	return nil
}

// ImageSpec is an internal representation of an image.  Currently, it wraps the
// value of a Container's Image field (e.g. imageID or imageDigest), but in the
// future it will include more detailed information about the different image types.
type ImageSpec struct {
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageSpec) Reset()         { *m = ImageSpec{} }
func (m *ImageSpec) String() string { return proto.CompactTextString(m) }
func (*ImageSpec) ProtoMessage()    {}
func (*ImageSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{38}
}
func (m *ImageSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageSpec.Unmarshal(m, b)
}
func (m *ImageSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageSpec.Marshal(b, m, deterministic)
}
func (dst *ImageSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageSpec.Merge(dst, src)
}
func (m *ImageSpec) XXX_Size() int {
	return xxx_messageInfo_ImageSpec.Size(m)
}
func (m *ImageSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ImageSpec proto.InternalMessageInfo

func (m *ImageSpec) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

type ImageFilter struct {
	// Spec of the image.
	Image                *ImageSpec `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ImageFilter) Reset()         { *m = ImageFilter{} }
func (m *ImageFilter) String() string { return proto.CompactTextString(m) }
func (*ImageFilter) ProtoMessage()    {}
func (*ImageFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{39}
}
func (m *ImageFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageFilter.Unmarshal(m, b)
}
func (m *ImageFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageFilter.Marshal(b, m, deterministic)
}
func (dst *ImageFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageFilter.Merge(dst, src)
}
func (m *ImageFilter) XXX_Size() int {
	return xxx_messageInfo_ImageFilter.Size(m)
}
func (m *ImageFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ImageFilter proto.InternalMessageInfo

func (m *ImageFilter) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

type ListImagesRequest struct {
	// Filter to list images.
	Filter               *ImageFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Check                bool         `protobuf:"varint,2,opt,name=check,proto3" json:"check,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListImagesRequest) Reset()         { *m = ListImagesRequest{} }
func (m *ListImagesRequest) String() string { return proto.CompactTextString(m) }
func (*ListImagesRequest) ProtoMessage()    {}
func (*ListImagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{40}
}
func (m *ListImagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListImagesRequest.Unmarshal(m, b)
}
func (m *ListImagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListImagesRequest.Marshal(b, m, deterministic)
}
func (dst *ListImagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListImagesRequest.Merge(dst, src)
}
func (m *ListImagesRequest) XXX_Size() int {
	return xxx_messageInfo_ListImagesRequest.Size(m)
}
func (m *ListImagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListImagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListImagesRequest proto.InternalMessageInfo

func (m *ListImagesRequest) GetFilter() *ImageFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListImagesRequest) GetCheck() bool {
	if m != nil {
		return m.Check
	}
	return false
}

type HealthCheck struct {
	Test                 []string `protobuf:"bytes,1,rep,name=test,proto3" json:"test,omitempty"`
	Interval             int64    `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Timeout              int64    `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	StartPeriod          int64    `protobuf:"varint,4,opt,name=start_period,json=startPeriod,proto3" json:"start_period,omitempty"`
	Retries              int32    `protobuf:"varint,5,opt,name=retries,proto3" json:"retries,omitempty"`
	ExitOnUnhealthy      bool     `protobuf:"varint,6,opt,name=exit_on_unhealthy,json=exitOnUnhealthy,proto3" json:"exit_on_unhealthy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheck) Reset()         { *m = HealthCheck{} }
func (m *HealthCheck) String() string { return proto.CompactTextString(m) }
func (*HealthCheck) ProtoMessage()    {}
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{41}
}
func (m *HealthCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheck.Unmarshal(m, b)
}
func (m *HealthCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheck.Marshal(b, m, deterministic)
}
func (dst *HealthCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheck.Merge(dst, src)
}
func (m *HealthCheck) XXX_Size() int {
	return xxx_messageInfo_HealthCheck.Size(m)
}
func (m *HealthCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheck.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheck proto.InternalMessageInfo

func (m *HealthCheck) GetTest() []string {
	if m != nil {
		return m.Test
	}
	return nil
}

func (m *HealthCheck) GetInterval() int64 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *HealthCheck) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *HealthCheck) GetStartPeriod() int64 {
	if m != nil {
		return m.StartPeriod
	}
	return 0
}

func (m *HealthCheck) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *HealthCheck) GetExitOnUnhealthy() bool {
	if m != nil {
		return m.ExitOnUnhealthy
	}
	return false
}

// Basic information about a container image.
type Image struct {
	// ID of the image.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Other names by which this image is known.
	RepoTags []string `protobuf:"bytes,2,rep,name=repo_tags,json=repoTags,proto3" json:"repo_tags,omitempty"`
	// Digests by which this image is known.
	RepoDigests []string `protobuf:"bytes,3,rep,name=repo_digests,json=repoDigests,proto3" json:"repo_digests,omitempty"`
	// Size of the image in bytes. Must be > 0.
	Size uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	// UID that will run the command(s). This is used as a default if no user is
	// specified when creating the container. UID and the following user name
	// are mutually exclusive.
	Uid *Int64Value `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`
	// User name that will run the command(s). This is used if UID is not set
	// and no user is specified when creating container.
	Username string `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	// Create time of image
	Created string `protobuf:"bytes,7,opt,name=created,proto3" json:"created,omitempty"`
	// Load time of image
	Loaded string `protobuf:"bytes,8,opt,name=loaded,proto3" json:"loaded,omitempty"`
	// oci image spec
	Spec *ImageSpec `protobuf:"bytes,9,opt,name=spec,proto3" json:"spec,omitempty"`
	// Health check
	Healthcheck          *HealthCheck `protobuf:"bytes,10,opt,name=healthcheck,proto3" json:"healthcheck,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{42}
}
func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (dst *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(dst, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Image) GetRepoTags() []string {
	if m != nil {
		return m.RepoTags
	}
	return nil
}

func (m *Image) GetRepoDigests() []string {
	if m != nil {
		return m.RepoDigests
	}
	return nil
}

func (m *Image) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Image) GetUid() *Int64Value {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *Image) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Image) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Image) GetLoaded() string {
	if m != nil {
		return m.Loaded
	}
	return ""
}

func (m *Image) GetSpec() *ImageSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Image) GetHealthcheck() *HealthCheck {
	if m != nil {
		return m.Healthcheck
	}
	return nil
}

type ListImagesResponse struct {
	// List of images.
	Images               []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,3,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListImagesResponse) Reset()         { *m = ListImagesResponse{} }
func (m *ListImagesResponse) String() string { return proto.CompactTextString(m) }
func (*ListImagesResponse) ProtoMessage()    {}
func (*ListImagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{43}
}
func (m *ListImagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListImagesResponse.Unmarshal(m, b)
}
func (m *ListImagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListImagesResponse.Marshal(b, m, deterministic)
}
func (dst *ListImagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListImagesResponse.Merge(dst, src)
}
func (m *ListImagesResponse) XXX_Size() int {
	return xxx_messageInfo_ListImagesResponse.Size(m)
}
func (m *ListImagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListImagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListImagesResponse proto.InternalMessageInfo

func (m *ListImagesResponse) GetImages() []*Image {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *ListImagesResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ListImagesResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type ImageStatusRequest struct {
	// Spec of the image.
	Image *ImageSpec `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Verbose indicates whether to return extra information about the image.
	Verbose              bool     `protobuf:"varint,2,opt,name=verbose,proto3" json:"verbose,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageStatusRequest) Reset()         { *m = ImageStatusRequest{} }
func (m *ImageStatusRequest) String() string { return proto.CompactTextString(m) }
func (*ImageStatusRequest) ProtoMessage()    {}
func (*ImageStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{44}
}
func (m *ImageStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageStatusRequest.Unmarshal(m, b)
}
func (m *ImageStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageStatusRequest.Marshal(b, m, deterministic)
}
func (dst *ImageStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageStatusRequest.Merge(dst, src)
}
func (m *ImageStatusRequest) XXX_Size() int {
	return xxx_messageInfo_ImageStatusRequest.Size(m)
}
func (m *ImageStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageStatusRequest proto.InternalMessageInfo

func (m *ImageStatusRequest) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ImageStatusRequest) GetVerbose() bool {
	if m != nil {
		return m.Verbose
	}
	return false
}

type ImageStatusResponse struct {
	// Status of the image.
	Image *Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Info is extra information of the Image. The key could be abitrary string, and
	// value should be in json format. The information could include anything useful
	// for debug, e.g. image config for oci image based container runtime.
	// It should only be returned non-empty when Verbose is true.
	Info                 map[string]string `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Errmsg               string            `protobuf:"bytes,3,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32            `protobuf:"varint,4,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ImageStatusResponse) Reset()         { *m = ImageStatusResponse{} }
func (m *ImageStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ImageStatusResponse) ProtoMessage()    {}
func (*ImageStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{45}
}
func (m *ImageStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageStatusResponse.Unmarshal(m, b)
}
func (m *ImageStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageStatusResponse.Marshal(b, m, deterministic)
}
func (dst *ImageStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageStatusResponse.Merge(dst, src)
}
func (m *ImageStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ImageStatusResponse.Size(m)
}
func (m *ImageStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImageStatusResponse proto.InternalMessageInfo

func (m *ImageStatusResponse) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ImageStatusResponse) GetInfo() map[string]string {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ImageStatusResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ImageStatusResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type ImageInfoRequest struct {
	Image                *ImageSpec `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ImageInfoRequest) Reset()         { *m = ImageInfoRequest{} }
func (m *ImageInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ImageInfoRequest) ProtoMessage()    {}
func (*ImageInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{46}
}
func (m *ImageInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageInfoRequest.Unmarshal(m, b)
}
func (m *ImageInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageInfoRequest.Marshal(b, m, deterministic)
}
func (dst *ImageInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageInfoRequest.Merge(dst, src)
}
func (m *ImageInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ImageInfoRequest.Size(m)
}
func (m *ImageInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageInfoRequest proto.InternalMessageInfo

func (m *ImageInfoRequest) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

type ImageInfoResponse struct {
	Spec                 string   `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,3,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageInfoResponse) Reset()         { *m = ImageInfoResponse{} }
func (m *ImageInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ImageInfoResponse) ProtoMessage()    {}
func (*ImageInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{47}
}
func (m *ImageInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageInfoResponse.Unmarshal(m, b)
}
func (m *ImageInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageInfoResponse.Marshal(b, m, deterministic)
}
func (dst *ImageInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageInfoResponse.Merge(dst, src)
}
func (m *ImageInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ImageInfoResponse.Size(m)
}
func (m *ImageInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImageInfoResponse proto.InternalMessageInfo

func (m *ImageInfoResponse) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *ImageInfoResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ImageInfoResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

// AuthConfig contains authorization information for connecting to a registry.
type AuthConfig struct {
	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Auth          string `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	ServerAddress string `protobuf:"bytes,4,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
	// IdentityToken is used to authenticate the user and get
	// an access token for the registry.
	IdentityToken string `protobuf:"bytes,5,opt,name=identity_token,json=identityToken,proto3" json:"identity_token,omitempty"`
	// RegistryToken is a bearer token to be sent to a registry
	RegistryToken        string   `protobuf:"bytes,6,opt,name=registry_token,json=registryToken,proto3" json:"registry_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthConfig) Reset()         { *m = AuthConfig{} }
func (m *AuthConfig) String() string { return proto.CompactTextString(m) }
func (*AuthConfig) ProtoMessage()    {}
func (*AuthConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{48}
}
func (m *AuthConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthConfig.Unmarshal(m, b)
}
func (m *AuthConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthConfig.Marshal(b, m, deterministic)
}
func (dst *AuthConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthConfig.Merge(dst, src)
}
func (m *AuthConfig) XXX_Size() int {
	return xxx_messageInfo_AuthConfig.Size(m)
}
func (m *AuthConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AuthConfig proto.InternalMessageInfo

func (m *AuthConfig) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthConfig) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AuthConfig) GetAuth() string {
	if m != nil {
		return m.Auth
	}
	return ""
}

func (m *AuthConfig) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *AuthConfig) GetIdentityToken() string {
	if m != nil {
		return m.IdentityToken
	}
	return ""
}

func (m *AuthConfig) GetRegistryToken() string {
	if m != nil {
		return m.RegistryToken
	}
	return ""
}

type PullImageRequest struct {
	// Spec of the image.
	Image *ImageSpec `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Authentication configuration for pulling the image.
	Auth *AuthConfig `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	// Config of the PodSandbox, which is used to pull image in PodSandbox context.
	SandboxConfig        *PodSandboxConfig `protobuf:"bytes,3,opt,name=sandbox_config,json=sandboxConfig,proto3" json:"sandbox_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PullImageRequest) Reset()         { *m = PullImageRequest{} }
func (m *PullImageRequest) String() string { return proto.CompactTextString(m) }
func (*PullImageRequest) ProtoMessage()    {}
func (*PullImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{49}
}
func (m *PullImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullImageRequest.Unmarshal(m, b)
}
func (m *PullImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullImageRequest.Marshal(b, m, deterministic)
}
func (dst *PullImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullImageRequest.Merge(dst, src)
}
func (m *PullImageRequest) XXX_Size() int {
	return xxx_messageInfo_PullImageRequest.Size(m)
}
func (m *PullImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullImageRequest proto.InternalMessageInfo

func (m *PullImageRequest) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *PullImageRequest) GetAuth() *AuthConfig {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *PullImageRequest) GetSandboxConfig() *PodSandboxConfig {
	if m != nil {
		return m.SandboxConfig
	}
	return nil
}

type PullImageResponse struct {
	// Reference to the image in use. For most runtimes, this should be an
	// image ID or digest.
	ImageRef             string   `protobuf:"bytes,1,opt,name=image_ref,json=imageRef,proto3" json:"image_ref,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,3,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullImageResponse) Reset()         { *m = PullImageResponse{} }
func (m *PullImageResponse) String() string { return proto.CompactTextString(m) }
func (*PullImageResponse) ProtoMessage()    {}
func (*PullImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{50}
}
func (m *PullImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullImageResponse.Unmarshal(m, b)
}
func (m *PullImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullImageResponse.Marshal(b, m, deterministic)
}
func (dst *PullImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullImageResponse.Merge(dst, src)
}
func (m *PullImageResponse) XXX_Size() int {
	return xxx_messageInfo_PullImageResponse.Size(m)
}
func (m *PullImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PullImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PullImageResponse proto.InternalMessageInfo

func (m *PullImageResponse) GetImageRef() string {
	if m != nil {
		return m.ImageRef
	}
	return ""
}

func (m *PullImageResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *PullImageResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type RemoveImageRequest struct {
	// Spec of the image to remove.
	Image                *ImageSpec `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Force                bool       `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RemoveImageRequest) Reset()         { *m = RemoveImageRequest{} }
func (m *RemoveImageRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveImageRequest) ProtoMessage()    {}
func (*RemoveImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{51}
}
func (m *RemoveImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveImageRequest.Unmarshal(m, b)
}
func (m *RemoveImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveImageRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveImageRequest.Merge(dst, src)
}
func (m *RemoveImageRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveImageRequest.Size(m)
}
func (m *RemoveImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveImageRequest proto.InternalMessageInfo

func (m *RemoveImageRequest) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *RemoveImageRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type RemoveImageResponse struct {
	Errmsg               string   `protobuf:"bytes,1,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,2,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveImageResponse) Reset()         { *m = RemoveImageResponse{} }
func (m *RemoveImageResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveImageResponse) ProtoMessage()    {}
func (*RemoveImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{52}
}
func (m *RemoveImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveImageResponse.Unmarshal(m, b)
}
func (m *RemoveImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveImageResponse.Marshal(b, m, deterministic)
}
func (dst *RemoveImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveImageResponse.Merge(dst, src)
}
func (m *RemoveImageResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveImageResponse.Size(m)
}
func (m *RemoveImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveImageResponse proto.InternalMessageInfo

func (m *RemoveImageResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *RemoveImageResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type ImageFsInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageFsInfoRequest) Reset()         { *m = ImageFsInfoRequest{} }
func (m *ImageFsInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ImageFsInfoRequest) ProtoMessage()    {}
func (*ImageFsInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{53}
}
func (m *ImageFsInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageFsInfoRequest.Unmarshal(m, b)
}
func (m *ImageFsInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageFsInfoRequest.Marshal(b, m, deterministic)
}
func (dst *ImageFsInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageFsInfoRequest.Merge(dst, src)
}
func (m *ImageFsInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ImageFsInfoRequest.Size(m)
}
func (m *ImageFsInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageFsInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageFsInfoRequest proto.InternalMessageInfo

// UInt64Value is the wrapper of uint64.
type UInt64Value struct {
	// The value.
	Value                uint64   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UInt64Value) Reset()         { *m = UInt64Value{} }
func (m *UInt64Value) String() string { return proto.CompactTextString(m) }
func (*UInt64Value) ProtoMessage()    {}
func (*UInt64Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{54}
}
func (m *UInt64Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UInt64Value.Unmarshal(m, b)
}
func (m *UInt64Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UInt64Value.Marshal(b, m, deterministic)
}
func (dst *UInt64Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UInt64Value.Merge(dst, src)
}
func (m *UInt64Value) XXX_Size() int {
	return xxx_messageInfo_UInt64Value.Size(m)
}
func (m *UInt64Value) XXX_DiscardUnknown() {
	xxx_messageInfo_UInt64Value.DiscardUnknown(m)
}

var xxx_messageInfo_UInt64Value proto.InternalMessageInfo

func (m *UInt64Value) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// StorageIdentifier uniquely identify the storage..
type StorageIdentifier struct {
	// UUID of the device.
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageIdentifier) Reset()         { *m = StorageIdentifier{} }
func (m *StorageIdentifier) String() string { return proto.CompactTextString(m) }
func (*StorageIdentifier) ProtoMessage()    {}
func (*StorageIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{55}
}
func (m *StorageIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageIdentifier.Unmarshal(m, b)
}
func (m *StorageIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageIdentifier.Marshal(b, m, deterministic)
}
func (dst *StorageIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageIdentifier.Merge(dst, src)
}
func (m *StorageIdentifier) XXX_Size() int {
	return xxx_messageInfo_StorageIdentifier.Size(m)
}
func (m *StorageIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_StorageIdentifier proto.InternalMessageInfo

func (m *StorageIdentifier) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

// FilesystemUsage provides the filesystem usage information.
type FilesystemUsage struct {
	// Timestamp in nanoseconds at which the information were collected. Must be > 0.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The underlying storage of the filesystem.
	StorageId *StorageIdentifier `protobuf:"bytes,2,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// UsedBytes represents the bytes used for images on the filesystem.
	// This may differ from the total bytes used on the filesystem and may not
	// equal CapacityBytes - AvailableBytes.
	UsedBytes *UInt64Value `protobuf:"bytes,3,opt,name=used_bytes,json=usedBytes,proto3" json:"used_bytes,omitempty"`
	// InodesUsed represents the inodes used by the images.
	// This may not equal InodesCapacity - InodesAvailable because the underlying
	// filesystem may also be used for purposes other than storing images.
	InodesUsed           *UInt64Value `protobuf:"bytes,4,opt,name=inodes_used,json=inodesUsed,proto3" json:"inodes_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FilesystemUsage) Reset()         { *m = FilesystemUsage{} }
func (m *FilesystemUsage) String() string { return proto.CompactTextString(m) }
func (*FilesystemUsage) ProtoMessage()    {}
func (*FilesystemUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{56}
}
func (m *FilesystemUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesystemUsage.Unmarshal(m, b)
}
func (m *FilesystemUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesystemUsage.Marshal(b, m, deterministic)
}
func (dst *FilesystemUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesystemUsage.Merge(dst, src)
}
func (m *FilesystemUsage) XXX_Size() int {
	return xxx_messageInfo_FilesystemUsage.Size(m)
}
func (m *FilesystemUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesystemUsage.DiscardUnknown(m)
}

var xxx_messageInfo_FilesystemUsage proto.InternalMessageInfo

func (m *FilesystemUsage) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *FilesystemUsage) GetStorageId() *StorageIdentifier {
	if m != nil {
		return m.StorageId
	}
	return nil
}

func (m *FilesystemUsage) GetUsedBytes() *UInt64Value {
	if m != nil {
		return m.UsedBytes
	}
	return nil
}

func (m *FilesystemUsage) GetInodesUsed() *UInt64Value {
	if m != nil {
		return m.InodesUsed
	}
	return nil
}

type ImageFsInfoResponse struct {
	// Information of image filesystem(s).
	ImageFilesystems     []*FilesystemUsage `protobuf:"bytes,1,rep,name=image_filesystems,json=imageFilesystems,proto3" json:"image_filesystems,omitempty"`
	Errmsg               string             `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32             `protobuf:"varint,3,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ImageFsInfoResponse) Reset()         { *m = ImageFsInfoResponse{} }
func (m *ImageFsInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ImageFsInfoResponse) ProtoMessage()    {}
func (*ImageFsInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{57}
}
func (m *ImageFsInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageFsInfoResponse.Unmarshal(m, b)
}
func (m *ImageFsInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageFsInfoResponse.Marshal(b, m, deterministic)
}
func (dst *ImageFsInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageFsInfoResponse.Merge(dst, src)
}
func (m *ImageFsInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ImageFsInfoResponse.Size(m)
}
func (m *ImageFsInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageFsInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImageFsInfoResponse proto.InternalMessageInfo

func (m *ImageFsInfoResponse) GetImageFilesystems() []*FilesystemUsage {
	if m != nil {
		return m.ImageFilesystems
	}
	return nil
}

func (m *ImageFsInfoResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *ImageFsInfoResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type TagImageRequest struct {
	SrcName              *ImageSpec `protobuf:"bytes,1,opt,name=srcName,proto3" json:"srcName,omitempty"`
	DestName             *ImageSpec `protobuf:"bytes,2,opt,name=destName,proto3" json:"destName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TagImageRequest) Reset()         { *m = TagImageRequest{} }
func (m *TagImageRequest) String() string { return proto.CompactTextString(m) }
func (*TagImageRequest) ProtoMessage()    {}
func (*TagImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{58}
}
func (m *TagImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagImageRequest.Unmarshal(m, b)
}
func (m *TagImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagImageRequest.Marshal(b, m, deterministic)
}
func (dst *TagImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagImageRequest.Merge(dst, src)
}
func (m *TagImageRequest) XXX_Size() int {
	return xxx_messageInfo_TagImageRequest.Size(m)
}
func (m *TagImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TagImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TagImageRequest proto.InternalMessageInfo

func (m *TagImageRequest) GetSrcName() *ImageSpec {
	if m != nil {
		return m.SrcName
	}
	return nil
}

func (m *TagImageRequest) GetDestName() *ImageSpec {
	if m != nil {
		return m.DestName
	}
	return nil
}

type TagImageResponse struct {
	Errmsg               string   `protobuf:"bytes,1,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Cc                   uint32   `protobuf:"varint,2,opt,name=cc,proto3" json:"cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagImageResponse) Reset()         { *m = TagImageResponse{} }
func (m *TagImageResponse) String() string { return proto.CompactTextString(m) }
func (*TagImageResponse) ProtoMessage()    {}
func (*TagImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_isula_image_231213ed9612ec4a, []int{59}
}
func (m *TagImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagImageResponse.Unmarshal(m, b)
}
func (m *TagImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagImageResponse.Marshal(b, m, deterministic)
}
func (dst *TagImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagImageResponse.Merge(dst, src)
}
func (m *TagImageResponse) XXX_Size() int {
	return xxx_messageInfo_TagImageResponse.Size(m)
}
func (m *TagImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TagImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TagImageResponse proto.InternalMessageInfo

func (m *TagImageResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *TagImageResponse) GetCc() uint32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

func init() {
	proto.RegisterType((*HealthCheckRequest)(nil), "isula.HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "isula.HealthCheckResponse")
	proto.RegisterType((*LoginRequest)(nil), "isula.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "isula.LoginResponse")
	proto.RegisterType((*LogoutRequest)(nil), "isula.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "isula.LogoutResponse")
	proto.RegisterType((*ContainerExportRequest)(nil), "isula.ContainerExportRequest")
	proto.RegisterType((*ContainerExportResponse)(nil), "isula.ContainerExportResponse")
	proto.RegisterType((*LoadImageRequest)(nil), "isula.LoadImageRequest")
	proto.RegisterType((*LoadImageResponose)(nil), "isula.LoadImageResponose")
	proto.RegisterType((*ImportRequest)(nil), "isula.ImportRequest")
	proto.RegisterType((*ImportResponose)(nil), "isula.ImportResponose")
	proto.RegisterType((*GraphdriverStatusRequest)(nil), "isula.GraphdriverStatusRequest")
	proto.RegisterType((*GraphdriverStatusResponse)(nil), "isula.GraphdriverStatusResponse")
	proto.RegisterType((*GraphdriverMetadataRequest)(nil), "isula.GraphdriverMetadataRequest")
	proto.RegisterType((*GraphdriverMetadataResponse)(nil), "isula.GraphdriverMetadataResponse")
	proto.RegisterMapType((map[string]string)(nil), "isula.GraphdriverMetadataResponse.MetadataEntry")
	proto.RegisterType((*ContainerFsUsageRequest)(nil), "isula.ContainerFsUsageRequest")
	proto.RegisterType((*ContainerFsUsageResponse)(nil), "isula.ContainerFsUsageResponse")
	proto.RegisterType((*ContainerUmountRequest)(nil), "isula.ContainerUmountRequest")
	proto.RegisterType((*ContainerUmountResponse)(nil), "isula.ContainerUmountResponse")
	proto.RegisterType((*ContainerMountRequest)(nil), "isula.ContainerMountRequest")
	proto.RegisterType((*ContainerMountResponse)(nil), "isula.ContainerMountResponse")
	proto.RegisterType((*ContainerRemoveRequest)(nil), "isula.ContainerRemoveRequest")
	proto.RegisterType((*ContainerRemoveResponse)(nil), "isula.ContainerRemoveResponse")
	proto.RegisterType((*ContainerPrepareRequest)(nil), "isula.ContainerPrepareRequest")
	proto.RegisterType((*ContainerPrepareResponse)(nil), "isula.ContainerPrepareResponse")
	proto.RegisterType((*ListContainersRequest)(nil), "isula.ListContainersRequest")
	proto.RegisterType((*ListContainersResponse)(nil), "isula.ListContainersResponse")
	proto.RegisterMapType((map[string]bool)(nil), "isula.ListContainersResponse.ContainersEntry")
	proto.RegisterType((*DNSConfig)(nil), "isula.DNSConfig")
	proto.RegisterType((*PortMapping)(nil), "isula.PortMapping")
	proto.RegisterType((*Mount)(nil), "isula.Mount")
	proto.RegisterType((*NamespaceOption)(nil), "isula.NamespaceOption")
	proto.RegisterType((*Int64Value)(nil), "isula.Int64Value")
	proto.RegisterType((*SELinuxOption)(nil), "isula.SELinuxOption")
	proto.RegisterType((*LinuxSandboxSecurityContext)(nil), "isula.LinuxSandboxSecurityContext")
	proto.RegisterType((*LinuxPodSandboxConfig)(nil), "isula.LinuxPodSandboxConfig")
	proto.RegisterMapType((map[string]string)(nil), "isula.LinuxPodSandboxConfig.SysctlsEntry")
	proto.RegisterType((*PodSandboxMetadata)(nil), "isula.PodSandboxMetadata")
	proto.RegisterType((*PodSandboxConfig)(nil), "isula.PodSandboxConfig")
	proto.RegisterMapType((map[string]string)(nil), "isula.PodSandboxConfig.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "isula.PodSandboxConfig.LabelsEntry")
	proto.RegisterType((*ImageSpec)(nil), "isula.ImageSpec")
	proto.RegisterType((*ImageFilter)(nil), "isula.ImageFilter")
	proto.RegisterType((*ListImagesRequest)(nil), "isula.ListImagesRequest")
	proto.RegisterType((*HealthCheck)(nil), "isula.HealthCheck")
	proto.RegisterType((*Image)(nil), "isula.Image")
	proto.RegisterType((*ListImagesResponse)(nil), "isula.ListImagesResponse")
	proto.RegisterType((*ImageStatusRequest)(nil), "isula.ImageStatusRequest")
	proto.RegisterType((*ImageStatusResponse)(nil), "isula.ImageStatusResponse")
	proto.RegisterMapType((map[string]string)(nil), "isula.ImageStatusResponse.InfoEntry")
	proto.RegisterType((*ImageInfoRequest)(nil), "isula.ImageInfoRequest")
	proto.RegisterType((*ImageInfoResponse)(nil), "isula.ImageInfoResponse")
	proto.RegisterType((*AuthConfig)(nil), "isula.AuthConfig")
	proto.RegisterType((*PullImageRequest)(nil), "isula.PullImageRequest")
	proto.RegisterType((*PullImageResponse)(nil), "isula.PullImageResponse")
	proto.RegisterType((*RemoveImageRequest)(nil), "isula.RemoveImageRequest")
	proto.RegisterType((*RemoveImageResponse)(nil), "isula.RemoveImageResponse")
	proto.RegisterType((*ImageFsInfoRequest)(nil), "isula.ImageFsInfoRequest")
	proto.RegisterType((*UInt64Value)(nil), "isula.UInt64Value")
	proto.RegisterType((*StorageIdentifier)(nil), "isula.StorageIdentifier")
	proto.RegisterType((*FilesystemUsage)(nil), "isula.FilesystemUsage")
	proto.RegisterType((*ImageFsInfoResponse)(nil), "isula.ImageFsInfoResponse")
	proto.RegisterType((*TagImageRequest)(nil), "isula.TagImageRequest")
	proto.RegisterType((*TagImageResponse)(nil), "isula.TagImageResponse")
	proto.RegisterEnum("isula.Protocol", Protocol_name, Protocol_value)
	proto.RegisterEnum("isula.MountPropagation", MountPropagation_name, MountPropagation_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImageServiceClient is the client API for ImageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImageServiceClient interface {
	// ListImages lists existing images.
	ListImages(ctx context.Context, in *ListImagesRequest, opts ...grpc.CallOption) (*ListImagesResponse, error)
	// ImageStatus returns the status of the image. If the image is not
	// present, returns a response with ImageStatusResponse.Image set to
	// nil.
	ImageStatus(ctx context.Context, in *ImageStatusRequest, opts ...grpc.CallOption) (*ImageStatusResponse, error)
	//  Get image information
	ImageInfo(ctx context.Context, in *ImageInfoRequest, opts ...grpc.CallOption) (*ImageInfoResponse, error)
	// PullImage pulls an image with authentication config.
	PullImage(ctx context.Context, in *PullImageRequest, opts ...grpc.CallOption) (*PullImageResponse, error)
	// RemoveImage removes the image.
	// This call is idempotent, and must not return an error if the image has
	// already been removed.
	RemoveImage(ctx context.Context, in *RemoveImageRequest, opts ...grpc.CallOption) (*RemoveImageResponse, error)
	// ImageFSInfo returns information of the filesystem that is used to store images.
	ImageFsInfo(ctx context.Context, in *ImageFsInfoRequest, opts ...grpc.CallOption) (*ImageFsInfoResponse, error)
	// Load image from file
	LoadImage(ctx context.Context, in *LoadImageRequest, opts ...grpc.CallOption) (*LoadImageResponose, error)
	// Import rootfs to be image
	Import(ctx context.Context, in *ImportRequest, opts ...grpc.CallOption) (*ImportResponose, error)
	// isulad image services
	// get all Container rootfs
	ListContainers(ctx context.Context, in *ListContainersRequest, opts ...grpc.CallOption) (*ListContainersResponse, error)
	// create rootfs for container
	ContainerPrepare(ctx context.Context, in *ContainerPrepareRequest, opts ...grpc.CallOption) (*ContainerPrepareResponse, error)
	// remove rootfs of container
	ContainerRemove(ctx context.Context, in *ContainerRemoveRequest, opts ...grpc.CallOption) (*ContainerRemoveResponse, error)
	// mount rwlayer for container
	ContainerMount(ctx context.Context, in *ContainerMountRequest, opts ...grpc.CallOption) (*ContainerMountResponse, error)
	// umount rwlayer of container
	ContainerUmount(ctx context.Context, in *ContainerUmountRequest, opts ...grpc.CallOption) (*ContainerUmountResponse, error)
	// export container rootfs
	ContainerExport(ctx context.Context, in *ContainerExportRequest, opts ...grpc.CallOption) (*ContainerExportResponse, error)
	// get filesystem usage of container
	ContainerFsUsage(ctx context.Context, in *ContainerFsUsageRequest, opts ...grpc.CallOption) (*ContainerFsUsageResponse, error)
	// get status of graphdriver
	GraphdriverStatus(ctx context.Context, in *GraphdriverStatusRequest, opts ...grpc.CallOption) (*GraphdriverStatusResponse, error)
	// get metadata of graphdriver
	GraphdriverMetadata(ctx context.Context, in *GraphdriverMetadataRequest, opts ...grpc.CallOption) (*GraphdriverMetadataResponse, error)
	// login registry
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	// logout registry
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
	// health check service
	HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	// Add a tag to the image
	TagImage(ctx context.Context, in *TagImageRequest, opts ...grpc.CallOption) (*TagImageResponse, error)
}

type imageServiceClient struct {
	cc *grpc.ClientConn
}

func NewImageServiceClient(cc *grpc.ClientConn) ImageServiceClient {
	return &imageServiceClient{cc}
}

func (c *imageServiceClient) ListImages(ctx context.Context, in *ListImagesRequest, opts ...grpc.CallOption) (*ListImagesResponse, error) {
	out := new(ListImagesResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/ListImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) ImageStatus(ctx context.Context, in *ImageStatusRequest, opts ...grpc.CallOption) (*ImageStatusResponse, error) {
	out := new(ImageStatusResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/ImageStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) ImageInfo(ctx context.Context, in *ImageInfoRequest, opts ...grpc.CallOption) (*ImageInfoResponse, error) {
	out := new(ImageInfoResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/ImageInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) PullImage(ctx context.Context, in *PullImageRequest, opts ...grpc.CallOption) (*PullImageResponse, error) {
	out := new(PullImageResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/PullImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) RemoveImage(ctx context.Context, in *RemoveImageRequest, opts ...grpc.CallOption) (*RemoveImageResponse, error) {
	out := new(RemoveImageResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/RemoveImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) ImageFsInfo(ctx context.Context, in *ImageFsInfoRequest, opts ...grpc.CallOption) (*ImageFsInfoResponse, error) {
	out := new(ImageFsInfoResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/ImageFsInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) LoadImage(ctx context.Context, in *LoadImageRequest, opts ...grpc.CallOption) (*LoadImageResponose, error) {
	out := new(LoadImageResponose)
	err := c.cc.Invoke(ctx, "/isula.ImageService/LoadImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) Import(ctx context.Context, in *ImportRequest, opts ...grpc.CallOption) (*ImportResponose, error) {
	out := new(ImportResponose)
	err := c.cc.Invoke(ctx, "/isula.ImageService/Import", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) ListContainers(ctx context.Context, in *ListContainersRequest, opts ...grpc.CallOption) (*ListContainersResponse, error) {
	out := new(ListContainersResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/ListContainers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) ContainerPrepare(ctx context.Context, in *ContainerPrepareRequest, opts ...grpc.CallOption) (*ContainerPrepareResponse, error) {
	out := new(ContainerPrepareResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/ContainerPrepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) ContainerRemove(ctx context.Context, in *ContainerRemoveRequest, opts ...grpc.CallOption) (*ContainerRemoveResponse, error) {
	out := new(ContainerRemoveResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/ContainerRemove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) ContainerMount(ctx context.Context, in *ContainerMountRequest, opts ...grpc.CallOption) (*ContainerMountResponse, error) {
	out := new(ContainerMountResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/ContainerMount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) ContainerUmount(ctx context.Context, in *ContainerUmountRequest, opts ...grpc.CallOption) (*ContainerUmountResponse, error) {
	out := new(ContainerUmountResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/ContainerUmount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) ContainerExport(ctx context.Context, in *ContainerExportRequest, opts ...grpc.CallOption) (*ContainerExportResponse, error) {
	out := new(ContainerExportResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/ContainerExport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) ContainerFsUsage(ctx context.Context, in *ContainerFsUsageRequest, opts ...grpc.CallOption) (*ContainerFsUsageResponse, error) {
	out := new(ContainerFsUsageResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/ContainerFsUsage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) GraphdriverStatus(ctx context.Context, in *GraphdriverStatusRequest, opts ...grpc.CallOption) (*GraphdriverStatusResponse, error) {
	out := new(GraphdriverStatusResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/GraphdriverStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) GraphdriverMetadata(ctx context.Context, in *GraphdriverMetadataRequest, opts ...grpc.CallOption) (*GraphdriverMetadataResponse, error) {
	out := new(GraphdriverMetadataResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/GraphdriverMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) TagImage(ctx context.Context, in *TagImageRequest, opts ...grpc.CallOption) (*TagImageResponse, error) {
	out := new(TagImageResponse)
	err := c.cc.Invoke(ctx, "/isula.ImageService/TagImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImageServiceServer is the server API for ImageService service.
type ImageServiceServer interface {
	// ListImages lists existing images.
	ListImages(context.Context, *ListImagesRequest) (*ListImagesResponse, error)
	// ImageStatus returns the status of the image. If the image is not
	// present, returns a response with ImageStatusResponse.Image set to
	// nil.
	ImageStatus(context.Context, *ImageStatusRequest) (*ImageStatusResponse, error)
	//  Get image information
	ImageInfo(context.Context, *ImageInfoRequest) (*ImageInfoResponse, error)
	// PullImage pulls an image with authentication config.
	PullImage(context.Context, *PullImageRequest) (*PullImageResponse, error)
	// RemoveImage removes the image.
	// This call is idempotent, and must not return an error if the image has
	// already been removed.
	RemoveImage(context.Context, *RemoveImageRequest) (*RemoveImageResponse, error)
	// ImageFSInfo returns information of the filesystem that is used to store images.
	ImageFsInfo(context.Context, *ImageFsInfoRequest) (*ImageFsInfoResponse, error)
	// Load image from file
	LoadImage(context.Context, *LoadImageRequest) (*LoadImageResponose, error)
	// Import rootfs to be image
	Import(context.Context, *ImportRequest) (*ImportResponose, error)
	// isulad image services
	// get all Container rootfs
	ListContainers(context.Context, *ListContainersRequest) (*ListContainersResponse, error)
	// create rootfs for container
	ContainerPrepare(context.Context, *ContainerPrepareRequest) (*ContainerPrepareResponse, error)
	// remove rootfs of container
	ContainerRemove(context.Context, *ContainerRemoveRequest) (*ContainerRemoveResponse, error)
	// mount rwlayer for container
	ContainerMount(context.Context, *ContainerMountRequest) (*ContainerMountResponse, error)
	// umount rwlayer of container
	ContainerUmount(context.Context, *ContainerUmountRequest) (*ContainerUmountResponse, error)
	// export container rootfs
	ContainerExport(context.Context, *ContainerExportRequest) (*ContainerExportResponse, error)
	// get filesystem usage of container
	ContainerFsUsage(context.Context, *ContainerFsUsageRequest) (*ContainerFsUsageResponse, error)
	// get status of graphdriver
	GraphdriverStatus(context.Context, *GraphdriverStatusRequest) (*GraphdriverStatusResponse, error)
	// get metadata of graphdriver
	GraphdriverMetadata(context.Context, *GraphdriverMetadataRequest) (*GraphdriverMetadataResponse, error)
	// login registry
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	// logout registry
	Logout(context.Context, *LogoutRequest) (*LogoutResponse, error)
	// health check service
	HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	// Add a tag to the image
	TagImage(context.Context, *TagImageRequest) (*TagImageResponse, error)
}

func RegisterImageServiceServer(s *grpc.Server, srv ImageServiceServer) {
	s.RegisterService(&_ImageService_serviceDesc, srv)
}

func _ImageService_ListImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).ListImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/ListImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).ListImages(ctx, req.(*ListImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_ImageStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).ImageStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/ImageStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).ImageStatus(ctx, req.(*ImageStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_ImageInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).ImageInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/ImageInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).ImageInfo(ctx, req.(*ImageInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_PullImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).PullImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/PullImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).PullImage(ctx, req.(*PullImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_RemoveImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).RemoveImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/RemoveImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).RemoveImage(ctx, req.(*RemoveImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_ImageFsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageFsInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).ImageFsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/ImageFsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).ImageFsInfo(ctx, req.(*ImageFsInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_LoadImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).LoadImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/LoadImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).LoadImage(ctx, req.(*LoadImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_Import_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).Import(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/Import",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).Import(ctx, req.(*ImportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_ListContainers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListContainersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).ListContainers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/ListContainers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).ListContainers(ctx, req.(*ListContainersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_ContainerPrepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerPrepareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).ContainerPrepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/ContainerPrepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).ContainerPrepare(ctx, req.(*ContainerPrepareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_ContainerRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerRemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).ContainerRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/ContainerRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).ContainerRemove(ctx, req.(*ContainerRemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_ContainerMount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerMountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).ContainerMount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/ContainerMount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).ContainerMount(ctx, req.(*ContainerMountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_ContainerUmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerUmountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).ContainerUmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/ContainerUmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).ContainerUmount(ctx, req.(*ContainerUmountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_ContainerExport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerExportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).ContainerExport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/ContainerExport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).ContainerExport(ctx, req.(*ContainerExportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_ContainerFsUsage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerFsUsageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).ContainerFsUsage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/ContainerFsUsage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).ContainerFsUsage(ctx, req.(*ContainerFsUsageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_GraphdriverStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GraphdriverStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).GraphdriverStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/GraphdriverStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).GraphdriverStatus(ctx, req.(*GraphdriverStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_GraphdriverMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GraphdriverMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).GraphdriverMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/GraphdriverMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).GraphdriverMetadata(ctx, req.(*GraphdriverMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).HealthCheck(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_TagImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).TagImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isula.ImageService/TagImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).TagImage(ctx, req.(*TagImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "isula.ImageService",
	HandlerType: (*ImageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListImages",
			Handler:    _ImageService_ListImages_Handler,
		},
		{
			MethodName: "ImageStatus",
			Handler:    _ImageService_ImageStatus_Handler,
		},
		{
			MethodName: "ImageInfo",
			Handler:    _ImageService_ImageInfo_Handler,
		},
		{
			MethodName: "PullImage",
			Handler:    _ImageService_PullImage_Handler,
		},
		{
			MethodName: "RemoveImage",
			Handler:    _ImageService_RemoveImage_Handler,
		},
		{
			MethodName: "ImageFsInfo",
			Handler:    _ImageService_ImageFsInfo_Handler,
		},
		{
			MethodName: "LoadImage",
			Handler:    _ImageService_LoadImage_Handler,
		},
		{
			MethodName: "Import",
			Handler:    _ImageService_Import_Handler,
		},
		{
			MethodName: "ListContainers",
			Handler:    _ImageService_ListContainers_Handler,
		},
		{
			MethodName: "ContainerPrepare",
			Handler:    _ImageService_ContainerPrepare_Handler,
		},
		{
			MethodName: "ContainerRemove",
			Handler:    _ImageService_ContainerRemove_Handler,
		},
		{
			MethodName: "ContainerMount",
			Handler:    _ImageService_ContainerMount_Handler,
		},
		{
			MethodName: "ContainerUmount",
			Handler:    _ImageService_ContainerUmount_Handler,
		},
		{
			MethodName: "ContainerExport",
			Handler:    _ImageService_ContainerExport_Handler,
		},
		{
			MethodName: "ContainerFsUsage",
			Handler:    _ImageService_ContainerFsUsage_Handler,
		},
		{
			MethodName: "GraphdriverStatus",
			Handler:    _ImageService_GraphdriverStatus_Handler,
		},
		{
			MethodName: "GraphdriverMetadata",
			Handler:    _ImageService_GraphdriverMetadata_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _ImageService_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _ImageService_Logout_Handler,
		},
		{
			MethodName: "HealthCheck",
			Handler:    _ImageService_HealthCheck_Handler,
		},
		{
			MethodName: "TagImage",
			Handler:    _ImageService_TagImage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "isula/isula_image.proto",
}

func init() {
	proto.RegisterFile("isula/isula_image.proto", fileDescriptor_isula_image_231213ed9612ec4a)
}

var fileDescriptor_isula_image_231213ed9612ec4a = []byte{
	// 2765 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x1a, 0x4d, 0x6f, 0x1b, 0xc7,
	0x55, 0x24, 0x45, 0x89, 0x7c, 0x14, 0x25, 0x6a, 0xa4, 0x58, 0x14, 0x6d, 0x27, 0xf6, 0x3a, 0xa9,
	0x5d, 0xb7, 0x55, 0x12, 0x26, 0xa9, 0x9d, 0x04, 0x0e, 0xa2, 0xc8, 0x1f, 0x61, 0xa1, 0x0f, 0x62,
	0x25, 0x05, 0x01, 0x02, 0x64, 0xb1, 0xde, 0x1d, 0x52, 0x5b, 0x93, 0x3b, 0xdb, 0x99, 0x59, 0xc5,
	0xea, 0xa9, 0x08, 0xd0, 0x5b, 0xef, 0x3d, 0xf7, 0xd6, 0x43, 0x7f, 0x41, 0x4f, 0xbd, 0x17, 0x2d,
	0x7a, 0xe8, 0x4f, 0xe8, 0x0f, 0x29, 0xe6, 0x6b, 0x39, 0xcb, 0x0f, 0x8b, 0xcc, 0x85, 0xd8, 0xf7,
	0xe6, 0xbd, 0x37, 0xef, 0x6b, 0xde, 0xbc, 0x99, 0x21, 0xec, 0x44, 0x2c, 0x1d, 0xf8, 0xef, 0xcb,
	0x5f, 0x2f, 0x1a, 0xfa, 0x7d, 0xbc, 0x97, 0x50, 0xc2, 0x09, 0x2a, 0x4b, 0x94, 0xb3, 0x0d, 0xe8,
	0x6b, 0xec, 0x0f, 0xf8, 0xc5, 0xc1, 0x05, 0x0e, 0x5e, 0xb9, 0xf8, 0x77, 0x29, 0x66, 0xdc, 0x79,
	0x02, 0x5b, 0x39, 0x2c, 0x4b, 0x48, 0xcc, 0x30, 0xba, 0x01, 0x2b, 0x98, 0xd2, 0x21, 0xeb, 0x37,
	0x0b, 0x77, 0x0a, 0x0f, 0xaa, 0xae, 0x86, 0xd0, 0x3a, 0x14, 0x83, 0xa0, 0x59, 0xbc, 0x53, 0x78,
	0x50, 0x77, 0x8b, 0x41, 0xe0, 0x7c, 0x0f, 0x6b, 0x87, 0xa4, 0x1f, 0xc5, 0x5a, 0x9c, 0xe0, 0x63,
	0x98, 0x5e, 0x62, 0x6a, 0xf8, 0x14, 0x84, 0x5a, 0x50, 0x49, 0x19, 0xa6, 0xb1, 0x3f, 0xc4, 0x92,
	0xbb, 0xea, 0x66, 0xb0, 0x18, 0x4b, 0x7c, 0xc6, 0x7e, 0x20, 0x34, 0x6c, 0x96, 0xd4, 0x98, 0x81,
	0x9d, 0x47, 0x50, 0xd7, 0xf2, 0x17, 0x54, 0xec, 0xbe, 0x64, 0x24, 0x29, 0xbf, 0x46, 0x33, 0xe7,
	0x31, 0xac, 0x1b, 0xc2, 0x05, 0xa7, 0xf8, 0x63, 0x01, 0x6e, 0x1c, 0x90, 0x98, 0xfb, 0x51, 0x8c,
	0xe9, 0xb3, 0xd7, 0x09, 0xa1, 0xd9, 0x64, 0x3b, 0xb0, 0x2a, 0x4c, 0xf3, 0xa2, 0xd0, 0xc8, 0x10,
	0x60, 0x27, 0x14, 0xb2, 0x49, 0xca, 0x93, 0x94, 0x6b, 0x2f, 0x68, 0x08, 0x35, 0xa0, 0x94, 0x46,
	0xca, 0xfc, 0xba, 0x2b, 0x3e, 0x05, 0xa6, 0x1f, 0x85, 0xcd, 0x65, 0x85, 0xe9, 0x47, 0x8a, 0xb7,
	0xd7, 0x63, 0x98, 0x37, 0xcb, 0x12, 0xa9, 0x21, 0x67, 0x1f, 0x76, 0x26, 0xd4, 0x58, 0xd0, 0x94,
	0xc7, 0xd0, 0x38, 0x24, 0x7e, 0xd8, 0x11, 0x59, 0x63, 0x6c, 0x40, 0xb0, 0xdc, 0x8b, 0x06, 0x58,
	0x73, 0xca, 0x6f, 0xa1, 0x14, 0xf7, 0xfb, 0x5a, 0x77, 0xf1, 0xe9, 0x9c, 0x01, 0xb2, 0x38, 0xc5,
	0xb4, 0x44, 0xcd, 0x4b, 0x52, 0x6e, 0xcd, 0xab, 0x20, 0x4b, 0x9f, 0xe2, 0x14, 0x7d, 0x4a, 0x99,
	0x3e, 0x9f, 0x40, 0xbd, 0x33, 0xb4, 0x1d, 0x3a, 0x9f, 0x32, 0x1d, 0xd8, 0x30, 0x6c, 0x46, 0x93,
	0x75, 0x28, 0x66, 0x41, 0x28, 0x2a, 0x27, 0xce, 0xa5, 0x41, 0x0b, 0x9a, 0x2f, 0xa8, 0x9f, 0x5c,
	0x84, 0x34, 0xba, 0xc4, 0xf4, 0x94, 0xfb, 0x3c, 0x65, 0x66, 0xcd, 0x7c, 0x07, 0xbb, 0x53, 0xc6,
	0x46, 0x2e, 0x67, 0x12, 0x93, 0xe5, 0x99, 0x84, 0x16, 0x30, 0xbd, 0x65, 0x09, 0x3f, 0xc2, 0xdc,
	0x0f, 0x7d, 0xee, 0x5f, 0x97, 0x58, 0xce, 0xff, 0x0a, 0x70, 0x73, 0x2a, 0x9f, 0x56, 0xeb, 0x10,
	0x2a, 0x43, 0x8d, 0x6b, 0x16, 0xee, 0x94, 0x1e, 0xd4, 0xda, 0x1f, 0xec, 0xc9, 0xba, 0xb0, 0xf7,
	0x06, 0xae, 0x3d, 0x83, 0x78, 0x16, 0x73, 0x7a, 0xe5, 0x66, 0x12, 0x44, 0x38, 0xac, 0xa5, 0x2c,
	0xbf, 0x2d, 0x03, 0x4b, 0x53, 0x0c, 0x5c, 0x36, 0x06, 0xb6, 0x3e, 0x87, 0x7a, 0x4e, 0xac, 0x88,
	0xe3, 0x2b, 0x7c, 0xa5, 0xed, 0x11, 0x9f, 0x68, 0x1b, 0xca, 0x97, 0xfe, 0x20, 0x35, 0xf2, 0x15,
	0xf0, 0x59, 0xf1, 0x71, 0xc1, 0x69, 0x5b, 0xb9, 0xfe, 0x9c, 0x9d, 0x33, 0x2b, 0x5f, 0x67, 0xba,
	0xe6, 0x5b, 0x68, 0x4e, 0xf2, 0x68, 0xb7, 0x6c, 0x43, 0x39, 0x15, 0x08, 0xcd, 0xa2, 0x80, 0xb9,
	0x63, 0xf5, 0xc2, 0x2a, 0x00, 0xe7, 0x43, 0x92, 0xc6, 0xd7, 0x17, 0x80, 0x6d, 0x28, 0xf7, 0x08,
	0x0d, 0x94, 0x69, 0x15, 0x57, 0x01, 0xb9, 0x25, 0x6c, 0x04, 0x2d, 0xb8, 0x84, 0x3f, 0x80, 0xb7,
	0x32, 0x11, 0x47, 0xf3, 0xa8, 0xe2, 0x7c, 0x69, 0x69, 0x7f, 0xf4, 0x93, 0xe6, 0xfc, 0xd0, 0x92,
	0xe0, 0xe2, 0x21, 0xb9, 0xbc, 0x3e, 0x18, 0xb6, 0xa5, 0x86, 0x65, 0xc1, 0x59, 0x2f, 0x2d, 0x11,
	0x5d, 0x8a, 0x13, 0x9f, 0x66, 0xd3, 0x6e, 0x43, 0x59, 0xee, 0x7c, 0x26, 0x9c, 0x12, 0xd0, 0x35,
	0xa0, 0x98, 0xd5, 0x00, 0x93, 0xbd, 0x25, 0x2b, 0x7b, 0xef, 0xc2, 0x1a, 0xe3, 0x84, 0xfa, 0x7d,
	0xec, 0x91, 0x84, 0xb3, 0xe6, 0xf2, 0x9d, 0xd2, 0x83, 0xaa, 0x5b, 0xd3, 0xb8, 0x93, 0x84, 0x33,
	0xe7, 0xc7, 0x82, 0x95, 0x48, 0xd9, 0xc4, 0x5a, 0xf9, 0x77, 0xa0, 0x26, 0xe3, 0xe6, 0x25, 0x24,
	0x8a, 0xb9, 0x9e, 0x1f, 0x24, 0xaa, 0x2b, 0x30, 0xe8, 0x36, 0x80, 0xd4, 0xc6, 0x0b, 0x48, 0xdc,
	0xd3, 0xca, 0x54, 0x25, 0xe6, 0x80, 0xc4, 0xbd, 0x79, 0x57, 0x8f, 0xb3, 0x03, 0x6f, 0x1d, 0x46,
	0x8c, 0x67, 0x7a, 0x64, 0x45, 0xe9, 0xdf, 0x05, 0xb8, 0x31, 0x3e, 0xa2, 0x75, 0x3b, 0x02, 0x08,
	0x32, 0xac, 0x5e, 0xfd, 0xbf, 0xd2, 0xab, 0x7f, 0x3a, 0xcb, 0xde, 0x08, 0xa5, 0x96, 0xbe, 0x25,
	0x60, 0xde, 0xd5, 0xd1, 0x7a, 0x02, 0x1b, 0x63, 0x62, 0xae, 0x5b, 0xea, 0x15, 0x7b, 0xa9, 0x7f,
	0x07, 0xd5, 0xa7, 0xc7, 0xa7, 0xc2, 0x39, 0x51, 0x1f, 0x35, 0x61, 0x55, 0xed, 0xd7, 0x4a, 0xff,
	0xaa, 0x6b, 0x40, 0xd1, 0x3d, 0x30, 0xec, 0xd3, 0xe0, 0x02, 0xb3, 0x66, 0x51, 0x0e, 0x65, 0xb0,
	0xe0, 0x22, 0x09, 0x8f, 0x48, 0xcc, 0x9a, 0x25, 0xc5, 0xa5, 0x41, 0xe7, 0xcf, 0x05, 0xa8, 0x75,
	0x09, 0xe5, 0x47, 0x7e, 0x92, 0x44, 0x71, 0x1f, 0xfd, 0x02, 0x2a, 0xb2, 0x59, 0x0a, 0xc8, 0x40,
	0x6a, 0xb7, 0xde, 0xde, 0xd0, 0x0e, 0xea, 0x6a, 0xb4, 0x9b, 0x11, 0xa0, 0xf7, 0x60, 0x3d, 0x73,
	0x87, 0x27, 0xb6, 0x1b, 0xa9, 0x7c, 0xd9, 0xad, 0x67, 0x58, 0x21, 0x1a, 0xdd, 0x84, 0xea, 0x05,
	0x61, 0x5c, 0x51, 0x94, 0x24, 0x45, 0x45, 0x20, 0xe4, 0xe0, 0x0e, 0xac, 0xca, 0xc1, 0x28, 0x91,
	0xc1, 0xad, 0xba, 0x2b, 0x02, 0xec, 0x24, 0xce, 0x3f, 0x0b, 0x50, 0x96, 0xab, 0x71, 0x6c, 0x1a,
	0x9f, 0x5f, 0x68, 0xbf, 0x59, 0xd3, 0xf8, 0xfc, 0x62, 0x34, 0x8d, 0xa0, 0xd0, 0xbd, 0x95, 0x9c,
	0x46, 0x0c, 0xb6, 0xa0, 0x42, 0xb1, 0x1f, 0x92, 0x78, 0x70, 0x25, 0x55, 0xa8, 0xb8, 0x19, 0x8c,
	0xee, 0xc3, 0x06, 0xc3, 0x83, 0x28, 0x4e, 0x5f, 0x7b, 0x14, 0x0f, 0xfc, 0x97, 0x78, 0x20, 0x55,
	0xa9, 0xb8, 0xeb, 0x1a, 0xed, 0x2a, 0x2c, 0xfa, 0x14, 0x6a, 0x09, 0x25, 0x89, 0xdf, 0xf7, 0x85,
	0xf3, 0x64, 0xf7, 0xb1, 0xde, 0xde, 0xd1, 0xfe, 0x91, 0xba, 0x76, 0x47, 0xc3, 0xae, 0x4d, 0xeb,
	0xfc, 0x16, 0x36, 0x8e, 0xfd, 0x21, 0x66, 0x89, 0x1f, 0x88, 0x45, 0x14, 0x91, 0x58, 0xac, 0x34,
	0xa9, 0x6f, 0x8c, 0xf9, 0x0f, 0x84, 0xbe, 0x92, 0x46, 0x55, 0xdc, 0x9a, 0xc0, 0x1d, 0x2b, 0x14,
	0xda, 0x85, 0x8a, 0x32, 0x49, 0x2f, 0xdb, 0x8a, 0x2b, 0x9d, 0xd5, 0x8d, 0xc2, 0x6c, 0x28, 0x4a,
	0x02, 0x6d, 0xd0, 0xaa, 0x72, 0x5c, 0xe0, 0x38, 0x00, 0x9d, 0x98, 0xff, 0xfa, 0xe3, 0x6f, 0x44,
	0x0a, 0x8d, 0x12, 0x4b, 0xc8, 0x2f, 0xe9, 0xc4, 0x72, 0x7c, 0xa8, 0x9f, 0x3e, 0x3b, 0x14, 0xc6,
	0x69, 0x6d, 0x10, 0x2c, 0x8b, 0x46, 0xd4, 0x34, 0x16, 0xe2, 0x5b, 0xe0, 0x28, 0x19, 0x64, 0xbb,
	0x9b, 0xf8, 0x16, 0x38, 0x7e, 0x95, 0x64, 0x35, 0x43, 0x7c, 0x8b, 0x29, 0x06, 0xf8, 0x52, 0xbb,
	0xad, 0xea, 0x2a, 0xc0, 0xf9, 0x43, 0x09, 0x6e, 0xca, 0x19, 0x4e, 0xfd, 0x38, 0x7c, 0x49, 0x5e,
	0x9f, 0xe2, 0x20, 0xa5, 0x11, 0xbf, 0x12, 0x6b, 0x01, 0xbf, 0xe6, 0xe8, 0x00, 0x36, 0x63, 0xe3,
	0x12, 0xcf, 0xa4, 0xa7, 0x98, 0xbe, 0xd6, 0xbe, 0xa1, 0x7d, 0x3a, 0xe6, 0x32, 0xb7, 0x11, 0xe7,
	0x11, 0x0c, 0x3d, 0x19, 0xc5, 0xce, 0x88, 0x28, 0x4a, 0x11, 0xdb, 0x5a, 0x44, 0xce, 0xca, 0x2c,
	0xa2, 0x86, 0xfd, 0x43, 0xa8, 0xd1, 0x34, 0xf6, 0x7c, 0xe6, 0x49, 0xe3, 0x4b, 0x92, 0x75, 0x53,
	0xb3, 0x8e, 0x9c, 0xe8, 0x56, 0x69, 0x1a, 0xef, 0xb3, 0x73, 0xe1, 0x94, 0xfb, 0xb0, 0x61, 0x32,
	0xc7, 0xa3, 0x84, 0xf0, 0x1e, 0x33, 0xd9, 0x62, 0xd0, 0xae, 0xc4, 0xa2, 0xf7, 0x61, 0x8b, 0xa5,
	0x49, 0x32, 0xc0, 0x43, 0x1c, 0x73, 0x7f, 0xe0, 0xf5, 0x29, 0x49, 0x13, 0xd6, 0x2c, 0xdf, 0x29,
	0x3d, 0x28, 0xb9, 0xc8, 0x1e, 0x7a, 0x21, 0x47, 0xd0, 0xdb, 0x00, 0x09, 0x8d, 0x2e, 0xa3, 0x01,
	0xee, 0xe3, 0xb0, 0xb9, 0x22, 0x85, 0x5a, 0x18, 0xf4, 0x01, 0x6c, 0x33, 0x1c, 0x04, 0x64, 0x98,
	0x78, 0x09, 0x25, 0xa2, 0xf5, 0x53, 0xb9, 0xbe, 0x2a, 0xbd, 0x8e, 0xf4, 0x58, 0x57, 0x0d, 0x89,
	0xac, 0x77, 0xfe, 0x54, 0x14, 0x55, 0x32, 0x4e, 0x5f, 0x77, 0x49, 0xa8, 0xa3, 0xa0, 0xeb, 0xc8,
	0x3d, 0xa8, 0x07, 0x52, 0x21, 0x4f, 0x54, 0xef, 0xac, 0x50, 0xaf, 0x29, 0x64, 0x57, 0xe2, 0xd0,
	0x11, 0x34, 0x98, 0x0e, 0x9a, 0xa8, 0xd6, 0x22, 0x6a, 0xda, 0xbb, 0x4e, 0x56, 0x35, 0x67, 0xc6,
	0xd7, 0xdd, 0x60, 0x13, 0x01, 0x5f, 0x65, 0x57, 0x2c, 0xe0, 0x03, 0x55, 0x85, 0x6a, 0xed, 0x9f,
	0xdb, 0x52, 0xc6, 0x55, 0xdc, 0x3b, 0x55, 0xb4, 0xaa, 0xee, 0x1a, 0xce, 0xd6, 0x67, 0xb0, 0x66,
	0x0f, 0x2c, 0xd4, 0x34, 0x51, 0x40, 0xa3, 0x59, 0x8e, 0xc6, 0x7b, 0xb8, 0x82, 0xb5, 0x0b, 0xea,
	0x63, 0x88, 0x6e, 0xa9, 0xc5, 0x31, 0xe4, 0x16, 0x54, 0xb3, 0xe4, 0xd3, 0xc9, 0x3f, 0x42, 0x88,
	0x02, 0xeb, 0x73, 0x8e, 0x87, 0x09, 0xd7, 0x5b, 0x94, 0x01, 0x9d, 0xbf, 0x2d, 0x43, 0x63, 0xc2,
	0xfb, 0x9f, 0xe4, 0x9a, 0x50, 0xe1, 0xd0, 0x5d, 0x53, 0x65, 0x27, 0xf4, 0xb3, 0xba, 0xcd, 0x96,
	0x5a, 0xf3, 0xf6, 0xe1, 0xd1, 0xc0, 0x22, 0xa0, 0x03, 0xd2, 0xf7, 0xc2, 0x88, 0xe2, 0x80, 0x13,
	0x7a, 0xa5, 0x75, 0x5c, 0x1b, 0x90, 0xfe, 0x53, 0x83, 0x43, 0xef, 0x03, 0x84, 0x31, 0x93, 0x3b,
	0x6f, 0xd4, 0x97, 0x9a, 0xd6, 0xda, 0x0d, 0x3d, 0x73, 0xb6, 0xc7, 0xb8, 0xd5, 0x30, 0x66, 0x5a,
	0xd1, 0x47, 0x50, 0x17, 0x55, 0xdb, 0x1b, 0xaa, 0xed, 0x41, 0x65, 0x6f, 0xad, 0x8d, 0x32, 0x6d,
	0xb3, 0x9d, 0xc3, 0x5d, 0x4b, 0x46, 0x00, 0x43, 0x9f, 0xc3, 0x8a, 0xac, 0x99, 0xac, 0xb9, 0x22,
	0x39, 0xee, 0x4d, 0xd8, 0xa7, 0xa3, 0x7c, 0x28, 0xa9, 0x54, 0x90, 0x35, 0x0b, 0xfa, 0x0d, 0xd4,
	0xfc, 0x38, 0x26, 0xdc, 0x57, 0x0b, 0x7a, 0x55, 0x4a, 0x78, 0x30, 0x4b, 0xc2, 0xfe, 0x88, 0x54,
	0x89, 0xb1, 0x99, 0x51, 0x1b, 0xca, 0x72, 0xc5, 0x37, 0x2b, 0xd2, 0xda, 0x5b, 0x6f, 0x4a, 0x39,
	0x57, 0x91, 0xb6, 0x3e, 0x85, 0x9a, 0xa5, 0xd6, 0x22, 0x29, 0xd6, 0xfa, 0x02, 0x1a, 0xe3, 0xfa,
	0x2c, 0x94, 0xa2, 0x77, 0xa1, 0x2a, 0x8f, 0x90, 0xa7, 0x09, 0x0e, 0xa6, 0x77, 0x71, 0xce, 0x27,
	0x50, 0x93, 0x24, 0xcf, 0xa3, 0x01, 0xc7, 0x14, 0xfd, 0xcc, 0x26, 0x1a, 0x85, 0x33, 0x93, 0x62,
	0xd8, 0xce, 0x61, 0x53, 0xf4, 0x38, 0x12, 0x6f, 0x9a, 0x25, 0xf4, 0x10, 0x56, 0x7a, 0x52, 0x8c,
	0xe6, 0x46, 0x36, 0xb7, 0x9a, 0xc0, 0xd5, 0x14, 0x42, 0x9b, 0xe0, 0x02, 0x07, 0xaf, 0x4c, 0x87,
	0x22, 0x01, 0xe7, 0x1f, 0x05, 0xa8, 0x59, 0x17, 0x27, 0x72, 0x7f, 0xc0, 0x8c, 0xeb, 0xee, 0x44,
	0x7e, 0x8b, 0xbc, 0x8d, 0x62, 0x8e, 0xe9, 0xa5, 0x3f, 0x90, 0xcc, 0x25, 0x37, 0x83, 0xc5, 0xca,
	0xe1, 0xd1, 0x10, 0x93, 0x54, 0xb5, 0x06, 0x25, 0xd7, 0x80, 0xaa, 0x13, 0xf5, 0x29, 0xf7, 0x12,
	0x4c, 0x23, 0xa2, 0x6e, 0x00, 0x4a, 0xa2, 0x13, 0xf5, 0x29, 0xef, 0x4a, 0x94, 0x60, 0xa6, 0x98,
	0xd3, 0x08, 0x33, 0xb9, 0x19, 0x97, 0x5d, 0x03, 0xa2, 0x87, 0xb0, 0x89, 0x5f, 0x47, 0xdc, 0x23,
	0xb1, 0x97, 0xc6, 0x17, 0x52, 0xbf, 0x2b, 0x5d, 0x52, 0x37, 0xc4, 0xc0, 0x49, 0x7c, 0x6e, 0xd0,
	0xce, 0xdf, 0x8b, 0x50, 0xee, 0x58, 0x0d, 0xf2, 0xe8, 0x90, 0x7c, 0x13, 0xaa, 0x14, 0x27, 0xc4,
	0xe3, 0x7e, 0x3f, 0x6b, 0xaa, 0x04, 0xe2, 0xcc, 0xef, 0x33, 0xa1, 0x9f, 0x1c, 0x0c, 0xa3, 0x3e,
	0x66, 0xdc, 0x74, 0x56, 0x35, 0x81, 0x7b, 0xaa, 0x50, 0xc2, 0x19, 0x2c, 0xfa, 0x3d, 0x96, 0xaa,
	0x2f, 0xbb, 0xf2, 0x1b, 0xdd, 0x53, 0xa5, 0xa5, 0x3c, 0x6b, 0xab, 0x91, 0xd5, 0xc6, 0xbe, 0x26,
	0x5a, 0x19, 0xbb, 0x26, 0x6a, 0xc2, 0x6a, 0x40, 0xb1, 0xcf, 0x71, 0xa8, 0x2b, 0xbf, 0x01, 0x45,
	0x43, 0x3a, 0x20, 0x7e, 0x88, 0x43, 0x99, 0xec, 0x55, 0x57, 0x43, 0xe8, 0x5d, 0x58, 0x66, 0x09,
	0x0e, 0x9a, 0xd5, 0x19, 0x19, 0x22, 0x47, 0xd1, 0xc7, 0x50, 0x53, 0x1e, 0x51, 0x51, 0x86, 0x5c,
	0x42, 0xd8, 0x77, 0x63, 0x36, 0x99, 0xf3, 0x12, 0x90, 0x9d, 0x56, 0xba, 0xd3, 0x7e, 0x17, 0x56,
	0x64, 0xd6, 0x99, 0x2e, 0x7b, 0xcd, 0x9e, 0xd3, 0xd5, 0x63, 0x73, 0x1f, 0x2f, 0xbf, 0x01, 0xa4,
	0x94, 0xb5, 0x6f, 0x1f, 0xe6, 0x4d, 0x7c, 0xe1, 0xaf, 0x4b, 0x4c, 0x5f, 0x12, 0x66, 0x7a, 0x6b,
	0x03, 0x3a, 0xff, 0x2d, 0xc0, 0x56, 0x4e, 0xb0, 0xd6, 0xde, 0xc9, 0x4b, 0xce, 0x2b, 0xaf, 0xa5,
	0x3e, 0x86, 0xe5, 0x28, 0xee, 0x11, 0x99, 0x15, 0xb5, 0xf6, 0xbb, 0xb9, 0xc9, 0x73, 0xd2, 0xf6,
	0x3a, 0x71, 0x8f, 0xa8, 0xc2, 0x24, 0x39, 0xe6, 0xbe, 0x1f, 0x78, 0x04, 0xd5, 0x8c, 0x75, 0xa1,
	0x1a, 0xf2, 0x19, 0x34, 0xa4, 0x1e, 0x82, 0x7b, 0x41, 0x67, 0x39, 0x27, 0xb0, 0x69, 0xf1, 0x6a,
	0x7f, 0x20, 0x9d, 0x3f, 0x7a, 0x87, 0x94, 0xd9, 0x32, 0x6f, 0xec, 0xfe, 0x55, 0x00, 0xd8, 0x4f,
	0xf9, 0x85, 0xde, 0x50, 0xec, 0xc4, 0x2e, 0xbc, 0xe1, 0xfe, 0xb3, 0x98, 0xbf, 0xff, 0x14, 0x2a,
	0xf8, 0x29, 0xbf, 0x30, 0x6d, 0xa7, 0xf8, 0x16, 0xe7, 0x02, 0x75, 0xf8, 0xf1, 0xfc, 0x30, 0xa4,
	0x98, 0x31, 0xdd, 0x7f, 0xd6, 0x15, 0x76, 0x5f, 0x21, 0x05, 0x59, 0x14, 0xe2, 0x98, 0x8b, 0x2e,
	0x86, 0x93, 0x57, 0x58, 0x35, 0xee, 0x55, 0xb7, 0x6e, 0xb0, 0x67, 0x02, 0x29, 0xc8, 0x28, 0xee,
	0x47, 0x8c, 0x53, 0x43, 0xa6, 0x16, 0x5e, 0xdd, 0x60, 0x25, 0x99, 0xf3, 0x97, 0x02, 0x34, 0xba,
	0xe9, 0x60, 0x90, 0xbb, 0x22, 0x9c, 0x37, 0x15, 0xdf, 0xd3, 0x56, 0x14, 0x73, 0x8b, 0x7f, 0xe4,
	0x1e, 0x6d, 0xd8, 0x17, 0xb0, 0xce, 0xd4, 0xbe, 0x64, 0xb6, 0x6a, 0xd5, 0x98, 0xee, 0xcc, 0xd8,
	0x02, 0xdd, 0x3a, 0xb3, 0x41, 0xe7, 0x5b, 0xd8, 0xb4, 0x54, 0xd4, 0x41, 0xbc, 0x09, 0xea, 0x94,
	0xed, 0x51, 0xdc, 0x33, 0xae, 0x8f, 0x14, 0x45, 0x6f, 0xee, 0x68, 0xba, 0x80, 0xd4, 0x65, 0xc5,
	0x4f, 0x32, 0x7f, 0xfa, 0x9d, 0xcf, 0x13, 0xd8, 0xca, 0xc9, 0x5c, 0xf0, 0x16, 0x64, 0x5b, 0x17,
	0x87, 0xe7, 0xcc, 0xca, 0x77, 0xe7, 0x1e, 0xd4, 0xce, 0x67, 0x1d, 0x82, 0x96, 0xcd, 0x21, 0xe8,
	0x3e, 0x6c, 0x9e, 0xaa, 0x7b, 0x8d, 0x8e, 0x4c, 0x85, 0x5e, 0xa4, 0x0e, 0x3d, 0x69, 0x9a, 0xed,
	0x02, 0xf2, 0xdb, 0xf9, 0x4f, 0x01, 0x36, 0x9e, 0x47, 0x03, 0xcc, 0xae, 0x18, 0xc7, 0x43, 0x79,
	0x73, 0x26, 0x1a, 0x42, 0xb1, 0x53, 0x31, 0xee, 0x0f, 0x13, 0x7d, 0xb6, 0x1a, 0x21, 0xd0, 0x23,
	0x00, 0x73, 0x8d, 0xa2, 0xfb, 0xc8, 0x5a, 0xbb, 0x69, 0x8e, 0x24, 0xe3, 0x73, 0xba, 0x55, 0x66,
	0x50, 0xe8, 0x43, 0x80, 0x94, 0xe1, 0xd0, 0x7b, 0x79, 0xc5, 0x31, 0xd3, 0x71, 0x37, 0x45, 0xf8,
	0xdc, 0x3e, 0x91, 0x08, 0xaa, 0xaf, 0x04, 0x11, 0xfa, 0x08, 0x6a, 0x51, 0x4c, 0x42, 0x2c, 0x0f,
	0x31, 0xa1, 0x6e, 0xeb, 0xa6, 0xf1, 0x80, 0x22, 0x3b, 0x67, 0x38, 0x74, 0x7e, 0x34, 0xb5, 0xcf,
	0xf8, 0x4d, 0xbb, 0xfd, 0x00, 0x36, 0x55, 0x9a, 0xf4, 0x32, 0x7b, 0x4d, 0x11, 0x37, 0xa7, 0xb2,
	0x31, 0x4f, 0xb8, 0x8d, 0x48, 0x77, 0x0b, 0x86, 0x7e, 0xee, 0x74, 0x7a, 0x05, 0x1b, 0x67, 0x7e,
	0x3f, 0x97, 0x4b, 0x0f, 0x61, 0x95, 0xd1, 0xe0, 0xd8, 0xd4, 0x87, 0x69, 0xd9, 0x64, 0x08, 0xd0,
	0x2f, 0xa1, 0x12, 0x62, 0xc6, 0x8f, 0x4d, 0x3f, 0x3c, 0x8d, 0x38, 0xa3, 0x10, 0x65, 0x71, 0x34,
	0xd9, 0x62, 0x49, 0xf6, 0xf0, 0x16, 0x54, 0xcc, 0xfd, 0x07, 0x5a, 0x85, 0xd2, 0xd9, 0x41, 0xb7,
	0xb1, 0x24, 0x3e, 0xce, 0x9f, 0x76, 0x1b, 0x85, 0x87, 0x43, 0x68, 0x8c, 0x9f, 0xfe, 0xd1, 0x0e,
	0x6c, 0x75, 0xdd, 0x93, 0xee, 0xfe, 0x8b, 0xfd, 0xb3, 0xce, 0xc9, 0xb1, 0xd7, 0x75, 0x3b, 0xdf,
	0xec, 0x9f, 0x3d, 0x6b, 0x2c, 0xa1, 0xbb, 0x70, 0xdb, 0x1e, 0xf8, 0xfa, 0xe4, 0xf4, 0xcc, 0x3b,
	0x3b, 0xf1, 0x0e, 0x4e, 0x8e, 0xcf, 0xf6, 0x3b, 0xc7, 0xcf, 0xdc, 0x46, 0x01, 0xdd, 0x86, 0x5d,
	0x9b, 0xe4, 0xab, 0xce, 0xd3, 0x8e, 0xfb, 0xec, 0x40, 0x7c, 0xef, 0x1f, 0x36, 0x8a, 0xed, 0xbf,
	0xae, 0xc1, 0x9a, 0x32, 0x10, 0xd3, 0xcb, 0x28, 0x10, 0x31, 0x83, 0xd1, 0x1e, 0x8c, 0x9a, 0xd6,
	0x8d, 0x56, 0xae, 0xdb, 0x6b, 0xed, 0x4e, 0x19, 0x51, 0x8e, 0x70, 0x96, 0xd0, 0x73, 0xdd, 0x56,
	0xaa, 0xdd, 0x0b, 0xed, 0x4e, 0xdb, 0xd1, 0x94, 0x98, 0xd6, 0xec, 0xcd, 0xce, 0x59, 0x42, 0x5f,
	0xea, 0x0e, 0x56, 0x64, 0x15, 0xda, 0xb1, 0x49, 0xad, 0xf5, 0xd9, 0x6a, 0x4e, 0x0e, 0xd8, 0x12,
	0xb2, 0xf2, 0x95, 0x49, 0x18, 0xaf, 0xb9, 0x99, 0x84, 0x89, 0x4a, 0xa7, 0x6c, 0xb1, 0x4a, 0x4a,
	0x66, 0xcb, 0x64, 0xe9, 0xca, 0x6c, 0x99, 0x52, 0x81, 0x2c, 0x9f, 0xa8, 0x35, 0x92, 0xf7, 0x49,
	0xae, 0xde, 0xe4, 0x7d, 0x92, 0x5f, 0x52, 0xce, 0x12, 0xda, 0x87, 0x6a, 0xf6, 0x38, 0x94, 0x59,
	0x34, 0xfe, 0xd0, 0x34, 0x0a, 0xcf, 0xc4, 0x3b, 0x92, 0xb3, 0x84, 0x1e, 0xc3, 0x8a, 0x7a, 0xd2,
	0x41, 0xdb, 0xd9, 0x54, 0xd6, 0xc3, 0x50, 0xeb, 0xc6, 0x18, 0x76, 0xc4, 0x79, 0x02, 0xeb, 0xf9,
	0xcb, 0x4d, 0x74, 0x6b, 0xc6, 0x9d, 0xa7, 0x92, 0x74, 0xfb, 0x8d, 0x37, 0xa2, 0xce, 0x12, 0x3a,
	0x87, 0xc6, 0xf8, 0xf5, 0x2f, 0x7a, 0x5b, 0x33, 0xcd, 0xb8, 0x90, 0x6e, 0xbd, 0x33, 0x73, 0x3c,
	0x13, 0xeb, 0x5a, 0xd7, 0xa4, 0x2a, 0x1c, 0xe8, 0xf6, 0x38, 0x57, 0xee, 0x72, 0xbd, 0xf5, 0xf6,
	0xac, 0xe1, 0x4c, 0xe6, 0x09, 0xac, 0xe7, 0xaf, 0xf6, 0x33, 0xdb, 0xa7, 0xbe, 0x11, 0xb4, 0x6e,
	0xcf, 0x18, 0x9d, 0xaa, 0xa4, 0x7a, 0xa0, 0x98, 0x54, 0x32, 0xf7, 0x02, 0x32, 0xa9, 0x64, 0xfe,
	0x5d, 0x63, 0x4c, 0xa6, 0x7a, 0xb7, 0x9c, 0x94, 0x99, 0x7b, 0x56, 0x9d, 0x94, 0x99, 0x7f, 0xee,
	0x1c, 0x8b, 0x91, 0x7e, 0xeb, 0x99, 0x8c, 0x51, 0xfe, 0xe1, 0x68, 0x32, 0x46, 0x63, 0x8f, 0x44,
	0xce, 0x12, 0xfa, 0x16, 0x36, 0x27, 0x5e, 0xfc, 0xd0, 0x3b, 0x93, 0x0f, 0x68, 0xf9, 0x82, 0x71,
	0x67, 0x36, 0x41, 0x26, 0xf9, 0x7b, 0xd8, 0x9a, 0xf2, 0x00, 0x87, 0xee, 0xbe, 0xe9, 0x71, 0x4e,
	0x49, 0x77, 0xae, 0x7f, 0xbf, 0x73, 0x96, 0xd0, 0xc7, 0x50, 0x96, 0x0f, 0xe8, 0x68, 0x2b, 0x5b,
	0x65, 0xa3, 0xe7, 0xfa, 0xd6, 0x76, 0x1e, 0x99, 0x71, 0x3d, 0x82, 0x15, 0xf5, 0x28, 0x8e, 0x2c,
	0x8a, 0xd1, 0x63, 0x7a, 0xeb, 0xad, 0x31, 0xac, 0x5d, 0x39, 0xec, 0x53, 0xf1, 0xee, 0x94, 0x63,
	0xd4, 0x58, 0xe5, 0x98, 0xf2, 0xef, 0x03, 0x67, 0x09, 0x3d, 0x81, 0x8a, 0xd9, 0xb4, 0x90, 0x59,
	0xe2, 0x63, 0x5b, 0x66, 0x6b, 0x67, 0x02, 0x6f, 0xd8, 0x5f, 0xae, 0xc8, 0xbb, 0xfa, 0x8f, 0xfe,
	0x1f, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xf3, 0xc7, 0xd9, 0x14, 0x21, 0x00, 0x00,
}
